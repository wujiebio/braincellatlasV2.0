{"version":3,"file":"js/app.a2a0274d.js","mappings":"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","sources":["webpack://single_cell_vis/./src/api/apiCache.js","webpack://single_cell_vis/./src/api/config.js","webpack://single_cell_vis/./src/utils/nonReactiveDataStore.js","webpack://single_cell_vis/./src/api/instance.js","webpack://single_cell_vis/./src/api/cellData.js","webpack://single_cell_vis/./src/api/index.js","webpack://single_cell_vis/./src/App.vue","webpack://single_cell_vis/src/App.vue","webpack://single_cell_vis/./src/App.vue?c036","webpack://single_cell_vis/./src/App.vue?0e40","webpack://single_cell_vis/./src/store/modules/cellData.js","webpack://single_cell_vis/./src/store/modules/uiState.js","webpack://single_cell_vis/./src/store/index.js","webpack://single_cell_vis/./src/router/index.js","webpack://single_cell_vis/./src/plugins/vuetify.js","webpack://single_cell_vis/./src/utils/memoryTestHelper.js","webpack://single_cell_vis/./src/main.js","webpack://single_cell_vis/webpack/bootstrap","webpack://single_cell_vis/webpack/runtime/amd options","webpack://single_cell_vis/webpack/runtime/chunk loaded","webpack://single_cell_vis/webpack/runtime/compat get default export","webpack://single_cell_vis/webpack/runtime/define property getters","webpack://single_cell_vis/webpack/runtime/ensure chunk","webpack://single_cell_vis/webpack/runtime/get javascript chunk filename","webpack://single_cell_vis/webpack/runtime/get mini-css chunk filename","webpack://single_cell_vis/webpack/runtime/global","webpack://single_cell_vis/webpack/runtime/hasOwnProperty shorthand","webpack://single_cell_vis/webpack/runtime/load script","webpack://single_cell_vis/webpack/runtime/make namespace object","webpack://single_cell_vis/webpack/runtime/node module decorator","webpack://single_cell_vis/webpack/runtime/publicPath","webpack://single_cell_vis/webpack/runtime/css loading","webpack://single_cell_vis/webpack/runtime/jsonp chunk loading","webpack://single_cell_vis/webpack/startup"],"sourcesContent":["/**\n * API请求缓存服务\n */\n\n/**\n * 创建请求缓存\n */\nconst apiCache = {\n  cache: new Map(),\n  \n  /**\n   * 缓存API请求结果\n   * @param {string} key - 缓存键名\n   * @param {Promise<any>} promise - API请求Promise\n   * @param {number} [ttl=60000] - 缓存有效期（毫秒）\n   * @returns {Promise<any>} - API请求结果\n   */\n  cacheRequest(key, promise, ttl = 60000) {\n    if (!this.cache.has(key)) {\n      // 缓存Promise结果\n      const cacheEntry = {\n        promise,\n        timestamp: Date.now(),\n        ttl\n      };\n      \n      this.cache.set(key, cacheEntry);\n      \n      // 处理promise完成后的操作\n      promise.catch(() => {\n        // 请求失败后从缓存中移除\n        this.cache.delete(key);\n      });\n    } else {\n      const cacheEntry = this.cache.get(key);\n      \n      // 检查缓存是否过期\n      if (Date.now() - cacheEntry.timestamp > cacheEntry.ttl) {\n        // 缓存过期，重新请求\n        cacheEntry.promise = promise;\n        cacheEntry.timestamp = Date.now();\n      }\n      \n      return cacheEntry.promise;\n    }\n    \n    return promise;\n  },\n  \n  /**\n   * 清除指定缓存\n   * @param {string} key - 缓存键名\n   */\n  invalidate(key) {\n    this.cache.delete(key);\n  },\n  \n  /**\n   * 清除所有缓存\n   */\n  invalidateAll() {\n    this.cache.clear();\n  }\n};\n\nexport default apiCache; ","/**\n * API配置信息\n */\n\n// 数据源类型枚举\nexport const DataSourceType = {\n  LOCAL: 'local', // 从public文件夹获取\n  REMOTE: 'remote' // 从远程API获取\n};\n\n// 动态数据集配置缓存\nlet datasetsConfig = null;\nlet configLoadPromise = null;\nlet isConfigLoading = false;\n\n/**\n * 加载数据集配置\n * @returns {Promise<Object>} 数据集配置对象\n */\nexport async function loadDatasetsConfig() {\n  // 如果已经有加载中的Promise，直接返回\n  if (configLoadPromise) {\n    console.log('配置正在加载中，返回现有Promise');\n    return configLoadPromise;\n  }\n  \n  // 如果配置已缓存，直接返回\n  if (datasetsConfig) {\n    console.log('使用缓存的配置');\n    return Promise.resolve(datasetsConfig);\n  }\n  \n  // 防止并发加载\n  if (isConfigLoading) {\n    console.log('配置加载中，等待完成...');\n    // 等待加载完成\n    while (isConfigLoading && !datasetsConfig) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    return datasetsConfig || Promise.reject(new Error('配置加载失败'));\n  }\n  \n  // 设置加载状态\n  isConfigLoading = true;\n  \n  // 创建加载Promise\n  configLoadPromise = (async () => {\n    try {\n      const response = await fetch('/Data/datasets_config.json');\n      if (!response.ok) {\n        throw new Error(`Failed to load datasets config: ${response.status}`);\n      }\n      \n      const config = await response.json();\n      console.log('config', config,defaultDatasets,'399999999999999');\n      // 验证配置格式\n      if (!config.datasets || !Array.isArray(config.datasets)) {\n        throw new Error('Invalid datasets config format: missing datasets array');\n      }\n      \n      // 过滤启用的数据集\n      config.datasets = config.datasets.filter(dataset => dataset.enabled !== false);\n      \n      // 验证默认数据集存在\n      if(defaultDatasets){\n        config.defaultDataset = defaultDatasets;\n      }\n      else if (config.defaultDataset && !config.datasets.find(d => d.id === config.defaultDataset)) {\n        console.warn(`配置的默认数据集 '${config.defaultDataset}' 在启用的数据集中不存在`);\n        config.defaultDataset = config.datasets.length > 0 ? config.datasets[0].id : null;\n        if (config.defaultDataset) {\n          console.info(`已自动设置默认数据集为: ${config.defaultDataset}`);\n        }\n      } else if (!config.defaultDataset && config.datasets.length > 0) {\n        // 如果配置文件中没有指定defaultDataset，自动设置为第一个\n        config.defaultDataset = config.datasets[0].id;\n        console.info(`配置文件中未指定defaultDataset，自动设置为第一个数据集: ${config.defaultDataset}`);\n      }\n      \n      datasetsConfig = config;\n      console.log('数据集配置加载成功:', config);\n      return config;\n      \n    } catch (error) {\n      console.error('加载数据集配置失败:', error);\n      \n             // 返回默认配置作为回退 - 使用实际存在的数据集\n       const fallbackConfig = {\n         datasets: [\n           {\n             id: 'Tumour',\n             name: 'Tumour',\n             displayName: 'Tumour scRNAseq',\n             description: 'Main single cell RNA-seq dataset',\n             basePath: '/Tumour',\n             enabled: true,\n             defaultVisualization: 'umap',\n             supportedVisualizations: ['tsne', 'umap', 'pca']\n           },\n           {\n             id: 'mouse',\n             name: 'mouse',\n             displayName: 'Mouse scRNAseq', \n             description: 'Alternative single cell RNA-seq dataset',\n             basePath: '/mouse',\n             enabled: true,\n             defaultVisualization: 'umap',\n             supportedVisualizations: ['tsne', 'umap', 'pca']\n           }\n         ],\n         defaultDataset: 'Tumour',\n         config: {\n           loadTimeout: 30000,\n           cacheTTL: 300000,\n           retryAttempts: 3,\n           autoDetectCellCount: true\n         }\n       };\n       \n       console.warn('使用回退配置，默认数据集设置为:', fallbackConfig.defaultDataset);\n      \n      datasetsConfig = fallbackConfig;\n      return fallbackConfig;\n    } finally {\n      isConfigLoading = false;\n      configLoadPromise = null;\n    }\n  })();\n  \n  return configLoadPromise;\n}\n\n/**\n * 获取数据集配置（同步方法，需要先调用loadDatasetsConfig）\n * @returns {Object|null} 数据集配置对象\n */\nexport function getDatasetsConfig() {\n  return datasetsConfig;\n}\n\n/**\n * 根据数据集配置动态生成DatasetType枚举\n * @returns {Object} 数据集类型枚举对象\n */\nexport function getDatasetTypes() {\n  if (!datasetsConfig) {\n    // 如果配置未加载，返回默认枚举\n    return {\n      SINGLE_OUTPUTS: 'single_outputs',\n      SINGLE_OUTPUTS1: 'single_outputs1'\n    };\n  }\n  \n  const types = {};\n  datasetsConfig.datasets.forEach(dataset => {\n    const enumKey = dataset.id.toUpperCase();\n    types[enumKey] = dataset.id;\n  });\n  \n  return types;\n}\n\n// 保持向后兼容的DatasetType - 将在配置加载后动态更新\nexport let DatasetType = {\n  SINGLE_OUTPUTS: 'single_outputs',\n  SINGLE_OUTPUTS1: 'single_outputs1',\n  SINGLE_OUTPUTS_QUADTREE_ORDER: 'single_outputs_quadtree_order',\n  SINGLE_OUTPUTS_ORIGINAL_ORDER: 'single_outputs_original_order'\n};\n\n// 默认数据源类型\nlet currentDataSource = DataSourceType.LOCAL;\n\n// 默认数据集 - 将从配置文件动态确定\nlet currentDataset = null;\n\n// 数据集切换状态标志\nlet isDatasetSwitching = false;\n\n// API请求去重机制\nconst pendingRequests = new Map();\n\n/**\n * 创建去重的API请求\n * @param {string} key - 请求唯一标识\n * @param {Function} requestFn - 请求函数\n * @returns {Promise} 请求结果\n */\nexport function createDedupedRequest(key, requestFn) {\n  // 如果已有相同请求在进行中，返回现有Promise\n  if (pendingRequests.has(key)) {\n    console.log(`API请求去重: ${key}`);\n    return pendingRequests.get(key);\n  }\n  \n  // 创建新请求\n  const request = requestFn().finally(() => {\n    // 请求完成后清除缓存\n    pendingRequests.delete(key);\n  });\n  \n  // 缓存请求Promise\n  pendingRequests.set(key, request);\n  \n  return request;\n}\n\n/**\n * 检查是否正在进行数据集切换\n * @returns {boolean} 是否正在切换数据集\n */\nexport function getDatasetSwitchingStatus() {\n  return isDatasetSwitching;\n}\n\n/**\n * 设置数据集切换状态\n * @param {boolean} switching - 是否正在切换\n */\nexport function setDatasetSwitching(switching) {\n  isDatasetSwitching = switching;\n  console.log(`数据集切换状态: ${switching ? '进行中' : '完成'}`);\n}\n\n/**\n * 设置数据源类型\n * @param {string} sourceType - 数据源类型，使用DataSourceType枚举\n */\nexport function setDataSource(sourceType) {\n  if (Object.values(DataSourceType).includes(sourceType)) {\n    currentDataSource = sourceType;\n    console.log(`数据源已切换为: ${sourceType}`);\n  } else {\n    console.error('无效的数据源类型');\n  }\n}\n\n/**\n * 获取当前数据源类型\n * @returns {string} 当前数据源类型\n */\nexport function getDataSource() {\n  return currentDataSource;\n}\n\n/**\n * 验证数据集类型是否有效\n * @param {string} datasetType - 数据集类型\n * @returns {boolean} 是否有效\n */\nexport function isValidDatasetType(datasetType) {\n  // 检查动态配置\n  if (datasetsConfig && datasetsConfig.datasets) {\n    return datasetsConfig.datasets.some(dataset => dataset.id === datasetType);\n  }\n  \n  // 回退到静态DatasetType检查\n  return Object.values(DatasetType).includes(datasetType);\n}\n\n/**\n * 获取数据集信息\n * @param {string} datasetType - 数据集类型\n * @returns {Object|null} 数据集信息对象\n */\nexport function getDatasetInfo(datasetType) {\n  if (datasetsConfig && datasetsConfig.datasets) {\n    return datasetsConfig.datasets.find(dataset => dataset.id === datasetType) || null;\n  }\n  return null;\n}\n\n/**\n * 设置当前数据集\n * @param {string} datasetType - 数据集类型\n */\nexport function setDataset(datasetType) {\n  if (isValidDatasetType(datasetType)) {\n    const oldDataset = currentDataset;\n    currentDataset = datasetType;\n    console.log(`数据集已切换为: ${datasetType}`);\n    \n    // 如果数据集发生了变化，清除相关缓存\n    if (oldDataset !== datasetType) {\n      console.log('数据集切换，清除相关缓存...');\n      \n      // 🔥 设置切换状态，抑制错误消息\n      setDatasetSwitching(true);\n      \n      // 动态导入并清除缓存\n      import('./apiCache').then(({ default: apiCache }) => {\n        // 清除字段信息缓存\n        apiCache.invalidate('fields_info');\n        // 清除细胞类型值缓存\n        apiCache.invalidate('cell_type_values');\n        // 清除基因列表缓存（如果有的话）\n        apiCache.invalidate('gene_list');\n        \n        console.log('缓存清除完成');\n        \n        // 延迟重置切换状态，给组件足够时间完成重新加载\n        setTimeout(() => {\n          setDatasetSwitching(false);\n        }, 2000);\n        \n      }).catch(error => {\n        console.warn('清除缓存时出错:', error);\n        setDatasetSwitching(false);\n      });\n    }\n    \n    // 触发数据集切换事件，包含旧数据集信息用于缓存清理\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(new CustomEvent('datasetChanged', { \n        detail: { \n          dataset: datasetType,\n          oldDataset: oldDataset  // 🔥 添加旧数据集信息\n        } \n      }));\n    }\n  } else {\n    console.error('无效的数据集类型:', datasetType);\n  }\n}\n\n/**\n * 获取当前数据集\n * @returns {string|null} 当前数据集，如果无法确定则返回 null\n */\nexport function getDataset() {\n  console.log('currentDataset', currentDataset);\n  \n  // 如果当前数据集为空，尝试从配置获取默认数据集\n  if (!currentDataset && datasetsConfig) {\n    // 优先使用配置文件中指定的默认数据集\n    currentDataset = datasetsConfig.defaultDataset;\n    \n    // 如果配置中没有指定默认数据集，使用第一个可用的数据集\n    if (!currentDataset && datasetsConfig.datasets && datasetsConfig.datasets.length > 0) {\n      currentDataset = datasetsConfig.datasets[0].id;\n    }\n  }\n  \n  // 返回当前数据集，如果无法确定则返回 null\n  return currentDataset;\n}\n\n/**\n * 获取当前数据集，如果为空则等待配置加载\n * @returns {Promise<string>} 当前数据集\n */\nexport async function getDatasetAsync() {\n  // 如果当前数据集存在，直接返回\n  if (currentDataset) {\n    return currentDataset;\n  }\n  \n  // 尝试初始化配置\n  try {\n    await initializeDatasetConfig();\n    return getDataset();\n  } catch (error) {\n    console.error('异步获取数据集失败:', error);\n    throw new Error('无法获取数据集配置');\n  }\n}\n\n/**\n * 初始化数据集配置\n * @returns {Promise<void>}\n */\nexport async function initializeDatasetConfig() {\n  try {\n    console.log('开始加载数据集配置...');\n    const config = await loadDatasetsConfig();\n    \n    console.log('配置加载结果:', {\n      hasConfig: !!config,\n      defaultDataset: config?.defaultDataset,\n      datasetsCount: config?.datasets?.length || 0,\n      datasets: config?.datasets?.map(d => d.id) || []\n    });\n    \n    // 更新DatasetType枚举\n    const dynamicTypes = getDatasetTypes();\n    Object.assign(DatasetType, dynamicTypes);\n    \n    // 设置默认数据集（如果当前数据集为空）\n    if (!currentDataset) {\n      // 优先使用配置文件中指定的默认数据集\n      currentDataset = config.defaultDataset;\n      console.log('从配置设置默认数据集:', currentDataset);\n      \n      // 如果配置中没有指定默认数据集，使用第一个可用的数据集\n      if (!currentDataset && config.datasets && config.datasets.length > 0) {\n        currentDataset = config.datasets[0].id;\n        console.warn('配置文件中未指定defaultDataset，使用第一个数据集:', currentDataset);\n      }\n    }\n    \n    console.log('数据集配置初始化完成，当前数据集:', currentDataset);\n    \n    // 确保currentDataset不为null\n    if (!currentDataset) {\n      console.error('警告：currentDataset仍为null，强制设置为Tumour');\n      currentDataset = 'Tumour';\n    }\n    \n  } catch (error) {\n    console.error('数据集配置初始化失败:', error);\n    console.log('datasetsConfig状态:', {\n      hasConfig: !!datasetsConfig,\n      defaultDataset: datasetsConfig?.defaultDataset,\n      datasetsCount: datasetsConfig?.datasets?.length || 0\n    });\n    \n    // 尝试从回退配置获取默认数据集\n    if (datasetsConfig && datasetsConfig.defaultDataset) {\n      currentDataset = datasetsConfig.defaultDataset;\n      console.log('从回退配置设置默认数据集:', currentDataset);\n    } else if (datasetsConfig && datasetsConfig.datasets && datasetsConfig.datasets.length > 0) {\n      currentDataset = datasetsConfig.datasets[0].id;\n      console.log('从回退配置第一个数据集设置:', currentDataset);\n    } else {\n      // 最后的兜底：强制设置一个默认值\n      console.error('无法确定默认数据集：没有可用的配置信息，强制设置为Tumour');\n      currentDataset = 'Tumour';\n    }\n  }\n}\n\n/**\n * 获取数据集的基础路径\n * @param {string} [datasetType] - 可选的数据集类型，默认使用当前数据集\n * @returns {string} 数据集基础路径\n */\nexport function getDatasetBasePath(datasetType = null) {\n  const dataset = datasetType || getDataset();\n  console.log('getDatasetBasePath - dataset:', dataset);\n  \n  // 🔧 如果数据集为空，尝试从配置获取默认数据集\n  if (!dataset && datasetsConfig) {\n    const fallbackDataset = datasetsConfig.defaultDataset || \n                           (datasetsConfig.datasets?.length > 0 ? datasetsConfig.datasets[0].id : null);\n    if (fallbackDataset) {\n      console.warn('使用回退数据集:', fallbackDataset);\n      return getDatasetBasePath(fallbackDataset);\n    }\n  }\n  \n  // 如果仍然为空，使用硬编码的默认值作为最后回退\n  if (!dataset) {\n    console.error('无法获取数据集，使用默认回退路径: /Tumour');\n    return '/Tumour';\n  }\n  \n  // 优先从配置获取basePath\n  const datasetInfo = getDatasetInfo(dataset);\n  if (datasetInfo && datasetInfo.basePath) {\n    return datasetInfo.basePath;\n  }\n  \n  // 回退到默认路径格式\n  return `/${dataset}`;\n}\n\n/**\n * 构建数据集相关的文件路径\n * @param {string} relativePath - 相对路径\n * @param {string} [datasetType] - 可选的数据集类型，默认使用当前数据集\n * @returns {string} 完整的文件路径\n */\nexport function buildDatasetPath(relativePath, datasetType = null) {\n  if (!relativePath) {\n    console.error('相对路径不能为空');\n    return '/Tumour/unknown';  // 安全的回退路径\n  }\n  \n  const basePath = getDatasetBasePath(datasetType);\n  const fullPath = `${basePath}/${relativePath}`;\n  \n  console.log(`buildDatasetPath: ${relativePath} -> ${fullPath}`);\n  return fullPath;\n}\n\n/**\n * 异步构建数据集相关的文件路径，确保配置已加载\n * @param {string} relativePath - 相对路径\n * @param {string} [datasetType] - 可选的数据集类型，默认使用当前数据集\n * @returns {Promise<string>} 完整的文件路径\n */\nexport async function buildDatasetPathAsync(relativePath, datasetType = null) {\n  if (!relativePath) {\n    throw new Error('相对路径不能为空');\n  }\n  \n  try {\n    // 确保配置已加载\n    await initializeDatasetConfig();\n    \n    const dataset = datasetType || await getDatasetAsync();\n    if (!dataset) {\n      throw new Error('无法获取数据集信息');\n    }\n    \n    // 优先从配置获取basePath\n    const datasetInfo = getDatasetInfo(dataset);\n    const basePath = datasetInfo?.basePath || `/${dataset}`;\n    \n    return `${basePath}/${relativePath}`;\n  } catch (error) {\n    console.error('异步构建数据集路径失败:', error.message);\n    throw new Error(`无法构建数据集路径: ${error.message}`);\n  }\n}\n\n// API配置\nconst API_CONFIG = {\n  // 数据集配置\n  datasets: {\n    // 原始数据集（有问题的）\n    'single_outputs': {\n      name: 'Single Cell Data (Original)',\n      basePath: '/single_outputs',\n      description: '原始数据集 - 存在渲染问题'\n    },\n    // 工作正常的小数据集\n    'single_outputs1': {\n      name: 'Single Cell Data 1',\n      basePath: '/single_outputs1',\n      description: '小数据集 - 渲染正常'\n    },\n    // 🔧 新增：使用四叉树遍历顺序的修复数据集\n    'single_outputs_quadtree_order': {\n      name: 'Single Cell Data (Fixed - QuadTree Order)',\n      basePath: '/single_outputs_quadtree_order',\n      description: '修复数据集 - 使用四叉树遍历顺序，确保渲染一致性'\n    },\n    // 🔧 最新修复：使用原始H5AD文件顺序的数据集\n    'single_outputs_original_order': {\n      name: 'Single Cell Data (Fixed - Original Order)',\n      basePath: '/single_outputs_original_order',\n      description: '最新修复数据集 - 使用原始H5AD文件顺序，确保坐标和属性数据索引完全一致'\n    },\n    // 🔧 完整修复：确保渲染器加载顺序与数据存储顺序完全一致\n    'single_outputs_fixed': {\n      name: 'Single Cell Data (Fully Fixed)',\n      basePath: '/single_outputs_fixed',\n      description: '完整修复数据集 - 坐标和属性数据按渲染器实际加载顺序存储，彻底解决颜色对应问题'\n    }\n  },\n  \n  // 默认数据集 - 使用修复后的数据集（确保数据一致性）\n  defaultDataset: 'single_outputs_fixed',\n  \n  // API端点\n  endpoints: {\n    quadTree: '/quad_tree.json',\n    matrixInfo: '/matrix_info.json',\n    fieldsInfo: '/fields_info.json',\n    geneList: '/gene_list.json',\n    geneToChunk: '/gene_to_chunk.json',\n    chunkToGenes: '/chunk_to_genes.json',\n    cellTypeValues: '/cell_type_values.json',\n    coordinateBlock: '/blocks/{blockId}.bin',\n    cellAttribute: '/cell_types/{attribute}.bin',\n    geneExpression: '/genes/{chunkId}.bin'\n  },\n  \n  // 缓存配置\n  cache: {\n    maxSize: 100 * 1024 * 1024, // 100MB\n    defaultTTL: 5 * 60 * 1000,   // 5分钟\n  },\n  \n  // 请求配置\n  request: {\n    timeout: 30000, // 30秒\n    retries: 3,\n    retryDelay: 1000,\n  }\n};\n\nexport default API_CONFIG; ","/**\n * 非响应式数据存储管理器\n * 专门用于存储大量数据，避免Vue响应式系统的内存溢出问题\n * \n * 解决方案说明：\n * - Vue 2的响应式系统会对数组的每个元素建立依赖追踪(dependArray)\n * - 对于225万×32字段的数据，这会导致严重的内存溢出\n * - 此模块将大数据存储在Vue响应式系统之外，通过事件系统通知组件更新\n */\n\n/**\n * 非响应式数据存储类\n * 使用Object.freeze()和WeakMap确保数据不会被Vue转换为响应式\n */\nclass NonReactiveDataStore {\n  constructor() {\n    // 使用Map存储数据，避免Vue的响应式转换\n    this.dataMap = new Map();\n    \n    // 事件监听器映射\n    this.listeners = new Map();\n    \n    // 数据版本号，用于触发组件更新\n    this.version = 0;\n    \n    console.log('🚀 NonReactiveDataStore initialized - 大数据将存储在Vue响应式系统之外');\n  }\n\n  /**\n   * 存储数据\n   * @param {string} key - 数据键名\n   * @param {*} data - 要存储的数据（将被冻结以避免响应式转换）\n   */\n  setData(key, data) {\n    // 深度冻结数据，确保Vue无法将其转换为响应式\n    const frozenData = this.deepFreeze(data);\n    this.dataMap.set(key, frozenData);\n    \n    // 更新版本号\n    this.version++;\n    \n    console.log(`📦 NonReactiveDataStore.setData: ${key}, size: ${this.getDataSize(data)}, version: ${this.version}`);\n    \n    // 通知监听器\n    this.notifyListeners(key, frozenData);\n    \n    // 通知版本更新监听器\n    this.notifyListeners('__version__', this.version);\n  }\n\n  /**\n   * 获取数据\n   * @param {string} key - 数据键名\n   * @returns {*} 存储的数据\n   */\n  getData(key) {\n    return this.dataMap.get(key);\n  }\n\n  /**\n   * 检查数据是否存在\n   * @param {string} key - 数据键名\n   * @returns {boolean} 是否存在\n   */\n  hasData(key) {\n    return this.dataMap.has(key);\n  }\n\n  /**\n   * 删除数据\n   * @param {string} key - 数据键名\n   */\n  removeData(key) {\n    const removed = this.dataMap.delete(key);\n    if (removed) {\n      this.version++;\n      this.notifyListeners(key, null);\n      // 通知版本更新监听器\n      this.notifyListeners('__version__', this.version);\n      console.log(`🗑️ NonReactiveDataStore.removeData: ${key}, version: ${this.version}`);\n    }\n  }\n\n  /**\n   * 清空所有数据\n   */\n  clearAll() {\n    this.dataMap.clear();\n    this.version++;\n    // 通知版本更新监听器\n    this.notifyListeners('__version__', this.version);\n    console.log(`🧹 NonReactiveDataStore.clearAll, version: ${this.version}`);\n  }\n\n  /**\n   * 获取当前版本号（用于触发Vue组件更新）\n   * @returns {number} 版本号\n   */\n  getVersion() {\n    return this.version;\n  }\n\n  /**\n   * 深度冻结对象，防止Vue响应式转换\n   * @param {*} obj - 要冻结的对象\n   * @returns {*} 冻结后的对象\n   */\n  deepFreeze(obj) {\n    if (obj === null || typeof obj !== 'object') {\n      return obj;\n    }\n\n    // 如果已经被冻结，直接返回\n    if (Object.isFrozen(obj)) {\n      return obj;\n    }\n\n    // 对于数组，先冻结每个元素\n    if (Array.isArray(obj)) {\n      obj.forEach((item, index) => {\n        obj[index] = this.deepFreeze(item);\n      });\n    } else {\n      // 对于对象，先冻结每个属性值\n      Object.values(obj).forEach(value => {\n        this.deepFreeze(value);\n      });\n    }\n\n    // 冻结对象本身\n    return Object.freeze(obj);\n  }\n\n  /**\n   * 添加数据变更监听器\n   * @param {string} key - 监听的数据键名\n   * @param {Function} listener - 监听器函数\n   */\n  addListener(key, listener) {\n    if (!this.listeners.has(key)) {\n      this.listeners.set(key, new Set());\n    }\n    this.listeners.get(key).add(listener);\n  }\n\n  /**\n   * 移除数据变更监听器\n   * @param {string} key - 监听的数据键名\n   * @param {Function} listener - 监听器函数\n   */\n  removeListener(key, listener) {\n    const keyListeners = this.listeners.get(key);\n    if (keyListeners) {\n      keyListeners.delete(listener);\n      if (keyListeners.size === 0) {\n        this.listeners.delete(key);\n      }\n    }\n  }\n\n  /**\n   * 通知监听器数据变更\n   * @param {string} key - 变更的数据键名\n   * @param {*} data - 新数据\n   */\n  notifyListeners(key, data) {\n    const keyListeners = this.listeners.get(key);\n    if (keyListeners) {\n      keyListeners.forEach(listener => {\n        try {\n          listener(data, key);\n        } catch (error) {\n          console.error(`监听器执行错误 [${key}]:`, error);\n        }\n      });\n    }\n  }\n\n  /**\n   * 获取数据大小信息（用于调试）\n   * @param {*} data - 数据\n   * @returns {string} 大小描述\n   */\n  getDataSize(data) {\n    if (Array.isArray(data)) {\n      return `Array[${data.length}]`;\n    } else if (data && typeof data === 'object') {\n      return `Object{${Object.keys(data).length} keys}`;\n    } else {\n      return typeof data;\n    }\n  }\n\n  /**\n   * 获取存储统计信息\n   * @returns {Object} 统计信息\n   */\n  getStats() {\n    const stats = {\n      totalKeys: this.dataMap.size,\n      version: this.version,\n      keys: Array.from(this.dataMap.keys()),\n      sizes: {}\n    };\n\n    this.dataMap.forEach((data, key) => {\n      stats.sizes[key] = this.getDataSize(data);\n    });\n\n    return stats;\n  }\n}\n\n// 创建全局单例实例\nconst nonReactiveDataStore = new NonReactiveDataStore();\n\n// 在开发环境下，将实例挂载到window对象以便调试\nif (process.env.NODE_ENV === 'development') {\n  window.nonReactiveDataStore = nonReactiveDataStore;\n}\n\nexport default nonReactiveDataStore;\n\n/**\n * Vue mixin，用于在组件中方便地访问非响应式数据\n * \n * 使用方法：\n * mixins: [nonReactiveDataMixin]\n * \n * 然后在组件中可以使用：\n * - this.$nonReactiveData.setData(key, data)\n * - this.$nonReactiveData.getData(key)\n * - this.$nonReactiveData.watchData(key, callback)\n */\nexport const nonReactiveDataMixin = {\n  data() {\n    return {\n      // 添加版本号到响应式数据中，用于触发重新渲染\n      nonReactiveDataVersion: nonReactiveDataStore.getVersion()\n    };\n  },\n\n  created() {\n    // 将数据存储实例挂载到组件实例\n    this.$nonReactiveData = nonReactiveDataStore;\n    \n    // 监听版本变更\n    this._versionUpdateHandler = () => {\n      this.nonReactiveDataVersion = nonReactiveDataStore.getVersion();\n    };\n    \n    nonReactiveDataStore.addListener('__version__', this._versionUpdateHandler);\n  },\n\n  beforeDestroy() {\n    // 清理版本监听器\n    if (this._versionUpdateHandler) {\n      nonReactiveDataStore.removeListener('__version__', this._versionUpdateHandler);\n    }\n  },\n\n  methods: {\n    /**\n     * 获取非响应式数据的便捷方法\n     * @param {string} key - 数据键名\n     * @returns {*} 存储的数据\n     */\n    getNonReactiveData(key) {\n      // 触发响应式更新的版本号依赖\n      this.nonReactiveDataVersion;\n      const data = nonReactiveDataStore.getData(key);\n      \n      // 添加调试信息\n      if (key === 'geneExp') {\n        console.log(`🔍 getNonReactiveData(${key}):`, {\n          version: this.nonReactiveDataVersion,\n          hasData: !!data,\n          geneCount: data ? Object.keys(data).length : 0,\n          genes: data ? Object.keys(data) : []\n        });\n      }\n      \n      return data;\n    },\n\n    /**\n     * 设置非响应式数据的便捷方法\n     * @param {string} key - 数据键名\n     * @param {*} data - 要存储的数据\n     */\n    setNonReactiveData(key, data) {\n      nonReactiveDataStore.setData(key, data);\n    },\n\n    /**\n     * 监听非响应式数据变更\n     * @param {string} key - 数据键名\n     * @param {Function} callback - 回调函数\n     */\n    watchNonReactiveData(key, callback) {\n      nonReactiveDataStore.addListener(key, callback);\n      \n      // 在组件销毁时自动清理监听器\n      this.$once('hook:beforeDestroy', () => {\n        nonReactiveDataStore.removeListener(key, callback);\n      });\n    }\n  }\n};\n","/**\r\n * Axios实例配置\r\n */\r\nimport axios from 'axios';\r\n\r\n// 创建axios实例\r\nconst api = axios.create({\r\n  baseURL: '/',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// 请求拦截器\r\napi.interceptors.request.use(\r\n  config => {\r\n    // 在发送请求之前做些什么\r\n    return config;\r\n  },\r\n  error => {\r\n    // 对请求错误做些什么\r\n    console.error('请求错误:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\napi.interceptors.response.use(\r\n  response => {\r\n    // 对响应数据做些什么\r\n    return response.data;\r\n  },\r\n  error => {\r\n    // 对响应错误做些什么\r\n    console.error('响应错误:', error);\r\n    \r\n    // 根据错误状态码做不同处理\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 404:\r\n          console.error('请求的资源不存在');\r\n          break;\r\n        case 500:\r\n          console.error('服务器内部错误');\r\n          break;\r\n        default:\r\n          console.error(`请求失败: ${error.response.status}`);\r\n      }\r\n    } else if (error.request) {\r\n      console.error('没有收到响应');\r\n    } else {\r\n      console.error('请求配置错误');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport { api }; ","/**\n * 单细胞数据相关API\n */\nimport { api } from './instance';\nimport { getDataSource, DataSourceType, buildDatasetPath, createDedupedRequest, getDataset } from './config';\n\nexport const cellDataApi = {\n  /**\n   * 获取字段信息\n   * @returns {Promise<Object>} 字段信息数据\n   */\n  getFieldsInfo: () => {\n    const dataset = getDataset();\n    const requestKey = `fields_info_${dataset}`;\n    \n    return createDedupedRequest(requestKey, () => {\n      if (getDataSource() === DataSourceType.LOCAL) {\n        return api.get(buildDatasetPath('fields_info.json'));\n      } else {\n        return api.get('/api/single-cell/fields-info');\n      }\n    });\n  },\n\n  /**\n   * 获取细胞类型数据\n   * @returns {Promise<Object>} 细胞类型信息数据\n   */\n  getCellTypeValues: () => {\n    const dataset = getDataset();\n    const requestKey = `cell_type_values_${dataset}`;\n    \n    return createDedupedRequest(requestKey, () => {\n      if (getDataSource() === DataSourceType.LOCAL) {\n        return api.get(buildDatasetPath('cell_type_values.json'));\n      } else {\n        return api.get('/api/single-cell/cell-type-values');\n      }\n    });\n  },\n  \n  /**\n   * 获取基因表达数据\n   * @param {string} geneName - 基因名称\n   * @returns {Promise<Object>} 基因表达数据\n   */\n  getGeneExpression: (geneName) => {\n    const dataset = getDataset();\n    const requestKey = `gene_expression_${dataset}_${geneName}`;\n    \n    return createDedupedRequest(requestKey, () => {\n      if (getDataSource() === DataSourceType.LOCAL) {\n        return api.get(`/gene_expressions/${geneName}.json`);\n      } else {\n        return api.get(`/api/single-cell/gene-expression/${geneName}`);\n      }\n    });\n  },\n  \n  /**\n   * 获取数据集摘要信息\n   * @returns {Promise<Object>} 数据集摘要\n   */\n  getDatasetSummary: () => {\n    if (getDataSource() === DataSourceType.LOCAL) {\n      return api.get('/multiple_outputs/dataset_summary.json');\n    } else {\n      return api.get('/api/single-cell/dataset-summary');\n    }\n  },\n  \n  /**\n   * 获取细胞数据\n   * @param {Object} params - 查询参数\n   * @param {number} [params.page=1] - 页码\n   * @param {number} [params.limit=5000] - 每页数量\n   * @returns {Promise<Object>} 细胞数据\n   */\n  getCellData: (params = { page: 1, limit: 5000 }) => {\n    if (getDataSource() === DataSourceType.LOCAL) {\n      // 从本地文件获取，需要考虑分页逻辑\n      return api.get('/cell_data.json', { params });\n    } else {\n      return api.get('/api/single-cell/cell-data', { params });\n    }\n  }\n}; ","/**\n * API接口统一入口\n */\nimport { api } from './instance';\nimport { cellDataApi } from './cellData';\nimport { fileApi } from './fileApi';\nimport apiCache from './apiCache';\nimport { DataSourceType, setDataSource, getDataSource } from './config';\n\n// 导出带缓存的API\nexport const cachedApi = {\n  /**\n   * 获取字段信息（带缓存）\n   * @returns {Promise<Object>} 字段信息数据\n   */\n  getFieldsInfo: () => {\n    const key = 'fields_info';\n    return apiCache.cacheRequest(key, cellDataApi.getFieldsInfo());\n  },\n  \n  /**\n   * 获取细胞类型值数据（带缓存）\n   * @returns {Promise<Object>} 细胞类型值数据\n   */\n  getCellTypeValues: () => {\n    const key = 'cell_type_values';\n    return apiCache.cacheRequest(key, cellDataApi.getCellTypeValues());\n  },\n  \n  /**\n   * 获取基因表达数据（带缓存）\n   * @param {string} geneName - 基因名称\n   * @returns {Promise<Object>} 基因表达数据\n   */\n  getGeneExpression: (geneName) => {\n    const key = `gene_exp_${geneName}`;\n    return apiCache.cacheRequest(key, cellDataApi.getGeneExpression(geneName));\n  },\n  \n  /**\n   * 获取数据集摘要信息（带缓存）\n   * @returns {Promise<Object>} 数据集摘要\n   */\n  getDatasetSummary: () => {\n    const key = 'dataset_summary';\n    return apiCache.cacheRequest(key, cellDataApi.getDatasetSummary());\n  },\n  \n  /**\n   * 获取细胞数据（带缓存）\n   * @param {Object} params - 查询参数\n   * @returns {Promise<Object>} 细胞数据\n   */\n  getCellData: (params) => {\n    const key = `cell_data_page_${params.page}_limit_${params.limit}`;\n    return apiCache.cacheRequest(key, cellDataApi.getCellData(params));\n  }\n};\n\n// 导出API相关\nexport { api, cellDataApi, fileApi, DataSourceType, setDataSource, getDataSource };\n\n// 默认导出\nexport default api; ","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',[_c('v-overlay',{attrs:{\"value\":_vm.isLoading,\"absolute\":\"\"}},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"size\":\"64\"}})],1),_c('v-snackbar',{attrs:{\"timeout\":5000,\"color\":\"error\",\"top\":\"\"},scopedSlots:_vm._u([{key:\"action\",fn:function({ attrs }){return [_c('v-btn',_vm._b({attrs:{\"text\":\"\"},on:{\"click\":_vm.clearError}},'v-btn',attrs,false),[_vm._v(\" 关闭 \")])]}}]),model:{value:(_vm.showError),callback:function ($$v) {_vm.showError=$$v},expression:\"showError\"}},[_vm._v(\" \"+_vm._s(_vm.errorMessage)+\" \")]),_c('v-main',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-app>\n    <v-overlay :value=\"isLoading\" absolute>\n      <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n    </v-overlay>\n    \n    <v-snackbar\n      v-model=\"showError\"\n      :timeout=\"5000\"\n      color=\"error\"\n      top\n    >\n      {{ errorMessage }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn\n          text\n          v-bind=\"attrs\"\n          @click=\"clearError\"\n        >\n          关闭\n        </v-btn>\n      </template>\n    </v-snackbar>\n    \n    <v-main>\n      <router-view/>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions } from 'vuex'\n\nexport default {\n  data: () => ({\n    showError: false\n  }),\n  computed: {\n    ...mapState({\n      errorMessage: state => state.error\n    }),\n    ...mapGetters([\n      'isLoading',\n      'hasError'\n    ])\n  },\n  watch: {\n    hasError(newVal) {\n      this.showError = newVal;\n    }\n  },\n  methods: {\n    ...mapActions([\n      'clearError'\n    ])\n  },\n  created() {\n    // 添加全局错误处理\n    window.addEventListener('error', (event) => {\n      this.$store.dispatch('setError', `系统错误: ${event.message}`);\n    });\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n\n.v-application p {\n  margin-bottom: 0px !important;\n}\n\n.v-window {\n  overflow: visible !important;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=31b27e1e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=31b27e1e&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * 细胞数据状态管理模块\n */\nimport { cellDataApi, cachedApi } from '@/api';\nimport { setDataSource, getDatasetSwitchingStatus } from '@/api/config';\nimport nonReactiveDataStore from '@/utils/nonReactiveDataStore';\n\n// 初始化数据集切换监听器\nif (typeof window !== 'undefined') {\n  window.addEventListener('datasetChanged', (event) => {\n    console.log('Store: 检测到数据集切换事件:', event.detail.dataset);\n    // 这里可以添加store级别的数据集切换处理逻辑\n    // 比如重置某些状态或触发数据重新加载\n  });\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    // ⚠️ 大数据已迁移到nonReactiveDataStore，避免Vue响应式系统OOM\n    // cellInfoList: [], // 已迁移到 nonReactiveDataStore.getData('cellInfoList')\n    // fieldValue: {},   // 已迁移到 nonReactiveDataStore.getData('fieldValue')\n    // geneExp: {},      // 已迁移到 nonReactiveDataStore.getData('geneExp')\n    \n    typeInfo: {},\n    classInfo: {},\n    hoverInfo: {},\n    colorField: \"\",\n    datasetList: [\"single\"],\n    field: [],\n    total: 0,\n    dataRange: {},\n    geneList: [],\n    datasetName: '',\n    geneExpRange: {},\n    \n    // 添加版本号用于触发组件重新渲染\n    dataVersion: 0,\n    \n    // 添加加载状态标志，防止重复请求\n    isLoadingFieldsInfo: false,\n    isLoadingCellTypeValues: false\n  },\n  getters: {\n    // 🔄 修改getters以从nonReactiveDataStore获取大数据\n    getCellInfoList: (state) => {\n      // 触发响应式更新的版本号依赖\n      state.dataVersion;\n      return nonReactiveDataStore.getData('cellInfoList') || [];\n    },\n    getFieldValue: (state) => {\n      state.dataVersion;\n      return nonReactiveDataStore.getData('fieldValue') || {};\n    },\n    getGeneExp: (state) => {\n      state.dataVersion;\n      return nonReactiveDataStore.getData('geneExp') || {};\n    },\n    \n    // 保持原有的小数据getters\n    getTypeInfo: state => state.typeInfo,\n    getColorField: state => state.colorField,\n    getDatasetList: state => state.datasetList,\n    getFieldInfo: state => state.field,\n    getDataRange: state => state.dataRange,\n    getDatasetName: state => state.datasetName,\n    getTotal: state => state.total\n  },\n  mutations: {\n    // 🔄 修改mutations以使用nonReactiveDataStore存储大数据\n    SET_CELL_INFO(state, data) {\n      console.log('🔄 SET_CELL_INFO: 存储到nonReactiveDataStore，数据大小:', Array.isArray(data) ? data.length : 'N/A');\n      nonReactiveDataStore.setData('cellInfoList', data);\n      state.dataVersion++; // 触发组件重新渲染\n    },\n    SET_FIELD_VALUE(state, value) {\n      console.log('🔄 SET_FIELD_VALUE: 存储到nonReactiveDataStore，字段数量:', Object.keys(value || {}).length);\n      nonReactiveDataStore.setData('fieldValue', value);\n      state.dataVersion++; // 触发组件重新渲染\n    },\n    SET_GENE_EXP(state, data) {\n      console.log('🔄 SET_GENE_EXP: 存储到nonReactiveDataStore，基因数量:', Object.keys(data || {}).length);\n      nonReactiveDataStore.setData('geneExp', data);\n      state.dataVersion++; // 触发组件重新渲染\n    },\n    \n    // 保持原有的小数据mutations\n    SET_TYPE_INFO(state, data) {\n      state.typeInfo = data;\n    },\n    SET_CLASS_INFO(state, data) {\n      state.classInfo = data;\n    },\n    SET_HOVER_INFO(state, data) {\n      state.hoverInfo = data;\n    },\n    SET_COLOR_FIELD(state, field) {\n      state.colorField = field;\n    },\n    SET_DATASET_LIST(state, list) {\n      state.datasetList = list;\n    },\n    SET_FIELD(state, field) {\n      state.field = field;\n    },\n    SET_TOTAL(state, total) {\n      state.total = total;\n    },\n    SET_DATA_RANGE(state, range) {\n      state.dataRange = range;\n    },\n    SET_GENE_LIST(state, list) {\n      state.geneList = list;\n    },\n    SET_DATASET_NAME(state, name) {\n      state.datasetName = name;\n    },\n    SET_GENE_EXP_RANGE(state, range) {\n      state.geneExpRange = range;\n    },\n    \n    // 添加清理非响应式数据的mutation\n    CLEAR_NON_REACTIVE_DATA(state) {\n      console.log('🧹 清理nonReactiveDataStore中的大数据');\n      nonReactiveDataStore.clearAll();\n      state.dataVersion++;\n    },\n    \n    // 添加加载状态控制mutations\n    SET_LOADING_FIELDS_INFO(state, loading) {\n      state.isLoadingFieldsInfo = loading;\n    },\n    SET_LOADING_CELL_TYPE_VALUES(state, loading) {\n      state.isLoadingCellTypeValues = loading;\n    }\n  },\n  actions: {\n    async loadFieldsInfo({ commit, dispatch, state }) {\n      // 防止重复加载\n      if (state.isLoadingFieldsInfo) {\n        console.log('字段信息正在加载中，跳过重复请求');\n        return;\n      }\n      \n      try {\n        commit('SET_LOADING_FIELDS_INFO', true);\n        dispatch('setLoading', true, { root: true });\n        \n        // 使用API接口获取字段信息\n        const data = await cachedApi.getFieldsInfo();\n        commit('SET_FIELD', data.fields);\n        commit('SET_TOTAL', data.total);\n        commit('SET_DATASET_NAME', data.h5ad_filename.split('.')[0]);\n        \n        // 设置数据范围\n        commit('SET_DATA_RANGE', {\n          min_x: data.bounds[0],\n          max_x: data.bounds[2],\n          min_y: data.bounds[1],\n          max_y: data.bounds[3]\n        });\n        \n        // 默认使用第一个字段作为颜色字段\n        if (data.fields.length > 0) {\n          commit('SET_COLOR_FIELD', data.fields[0]);\n        }\n        \n        dispatch('setLoading', false, { root: true });\n      } catch (error) {\n        console.error('加载字段信息失败:', error);\n        \n        // 🔥 只在非数据集切换期间显示错误消息\n        if (!getDatasetSwitchingStatus()) {\n          dispatch('setError', '加载数据失败，请检查网络连接后重试', { root: true });\n        } else {\n          console.log('数据集切换期间的错误已被抑制:', error.message);\n        }\n        \n        dispatch('setLoading', false, { root: true });\n      } finally {\n        commit('SET_LOADING_FIELDS_INFO', false);\n      }\n    },\n    \n    /**\n     * 加载细胞类型值数据\n     */\n    async loadCellTypeValues({ commit, dispatch, state }) {\n      // 防止重复加载\n      if (state.isLoadingCellTypeValues) {\n        console.log('细胞类型值正在加载中，跳过重复请求');\n        return;\n      }\n      \n      try {\n        commit('SET_LOADING_CELL_TYPE_VALUES', true);\n        dispatch('setLoading', true, { root: true });\n        \n        // 使用API接口获取细胞类型值数据\n        const data = await cachedApi.getCellTypeValues();\n        \n        commit('SET_FIELD_VALUE', data);\n        \n        // 加载完成后处理细胞信息列表\n        await dispatch('processCellInfoList', { fields: state.field, values: data});\n        \n        dispatch('setLoading', false, { root: true });\n      } catch (error) {\n        console.error('加载细胞类型值失败:', error);\n        \n        // 🔥 只在非数据集切换期间显示错误消息\n        if (!getDatasetSwitchingStatus()) {\n          dispatch('setError', '加载细胞类型数据失败，请检查网络连接后重试', { root: true });\n        } else {\n          console.log('数据集切换期间的错误已被抑制:', error.message);\n        }\n        \n        dispatch('setLoading', false, { root: true });\n      } finally {\n        commit('SET_LOADING_CELL_TYPE_VALUES', false);\n      }\n    },\n    \n    /**\n     * 加载基因列表\n     * 从文件中获取基因列表数据并存储到Vuex中\n     */\n    async loadGeneList({ commit, dispatch }) {\n      try {\n        dispatch('setLoading', true, { root: true });\n        \n        // 从文件获取基因列表\n        const { buildDatasetPath } = await import('@/api/config');\n      const response = await fetch(buildDatasetPath('gene_list.json'));\n        if (!response.ok) {\n          throw new Error(`加载基因列表失败: ${response.status} ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        \n        // 格式化基因列表数据\n        const formattedList = data.map(item => ({\n          label: item,\n          value: item\n        }));\n        \n        commit('SET_GENE_LIST', formattedList);\n        \n        dispatch('setLoading', false, { root: true });\n        return formattedList;\n      } catch (error) {\n        console.error('加载基因列表失败:', error);\n        \n        // 🔥 只在非数据集切换期间显示错误消息\n        if (!getDatasetSwitchingStatus()) {\n          dispatch('setError', '加载基因列表失败，请检查网络连接后重试', { root: true });\n        } else {\n          console.log('数据集切换期间的错误已被抑制:', error.message);\n        }\n        \n        dispatch('setLoading', false, { root: true });\n        return [];\n      }\n    },\n    \n    processCellInfoList({ commit, state }, { fields, values }) {\n      const notCellType = ['x', 'y', 'Siletti_modf_SCANVI_L1', 'Siletti_modf_SCANVI_L2', 'region', 'subregion'];\n      const addCellType = ['Class'];\n      \n      // 处理基本字段\n      const basic = fields.filter(key => !notCellType.includes(key));\n      let cellInfoList = [];\n      \n      // 特殊处理Class字段\n      if (fields.includes('Siletti_modf_SCANVI_L1') && fields.includes('Siletti_modf_SCANVI_L2')) {\n        const classInfo = {\n          name: 'Class',\n          children: []\n        };\n        \n        // 处理层级结构\n        const parentNodes = values['Siletti_modf_SCANVI_L1'];\n        const treeData = parentNodes.map(item => {\n          const nodeObj = { id: item, name: item, children: [] };\n          const children = values['Siletti_modf_SCANVI_L2'];\n          const nodeChildren = children\n            .filter(child => child.includes(item + '-'))\n            .map(nChild => ({ id: nChild, name: nChild, parent: nodeObj.id }));\n          \n          nodeObj.children = nodeChildren;\n          return nodeObj;\n        });\n        \n        classInfo.children = treeData;\n        cellInfoList.push(classInfo);\n      }\n      \n      console.log(fields,values,86);\n      // 处理其他字段\n      for (const key of basic) {\n        if (key !== 'Class') {\n          const cellInfo = { name: key, children: [] };\n          \n          if (values[key] && Array.isArray(values[key])) {\n            // 处理普通字段值\n            cellInfo.children = values[key].map(val => ({\n              id: val,\n              name: val\n            }));\n          }\n          \n          cellInfoList.push(cellInfo);\n        }\n      }\n      \n      commit('SET_CELL_INFO', cellInfoList);\n    },\n    \n    async loadGeneExpression({ commit, dispatch, state }, geneName) {\n      try {\n        dispatch('setLoading', true, { root: true });\n        \n        // 使用API接口获取基因表达数据\n        const data = await cachedApi.getGeneExpression(geneName);\n        \n        // 🔄 从nonReactiveDataStore获取现有基因表达数据\n        const currentGeneExp = nonReactiveDataStore.getData('geneExp') || {};\n        \n        // 更新基因表达数据（存储到非响应式存储）\n        commit('SET_GENE_EXP', {\n          ...currentGeneExp,\n          [geneName]: data.values\n        });\n        \n        // 基因表达范围数据较小，可以继续存储在Vuex中\n        commit('SET_GENE_EXP_RANGE', {\n          ...state.geneExpRange,\n          [geneName]: {\n            min: data.min,\n            max: data.max\n          }\n        });\n        \n        dispatch('setLoading', false, { root: true });\n        return data;\n      } catch (error) {\n        console.error(`加载基因${geneName}表达数据失败:`, error);\n        dispatch('setError', `加载基因${geneName}表达数据失败`, { root: true });\n        dispatch('setLoading', false, { root: true });\n        return null;\n      }\n    },\n    \n    setTypeInfo({ commit }, typeInfo) {\n      commit('SET_TYPE_INFO', typeInfo);\n    },\n    \n    setColorField({ commit }, field) {\n      commit('SET_COLOR_FIELD', field);\n    },\n    \n    setHoverInfo({ commit }, info) {\n      commit('SET_HOVER_INFO', info);\n    },\n\n    clearHoverInfo({ commit }) {\n      commit('SET_HOVER_INFO', {});\n    },\n    \n    /**\n     * 切换数据源\n     * @param {Object} context - Vuex 上下文\n     * @param {string} sourceType - 数据源类型\n     */\n    switchDataSource({ dispatch, commit }, sourceType) {\n      // 设置数据源\n      setDataSource(sourceType);\n      \n      // 🔄 清理非响应式数据存储，防止内存泄漏\n      commit('CLEAR_NON_REACTIVE_DATA');\n      \n      // 刷新数据\n      dispatch('loadFieldsInfo');\n      \n      // 清空已加载的基因表达数据\n      // 因为切换数据源后，之前的数据可能不适用\n      commit('SET_GENE_EXP', {});\n      commit('SET_GENE_EXP_RANGE', {});\n    }\n  }\n} ","/**\n * UI界面状态管理模块\n */\nexport default {\n  namespaced: true,\n  state: {\n    drawer: false,\n    selectedItem: null,\n    operateActive: 1,\n    selectedTypes: [],\n    gridClass: '',\n    selectNodes: [],\n    currentRangeSelected: [],\n    filterNum: 0,\n    // 筛选相关状态\n    typeClass: [],\n    typeItem: [],\n    typeValue: [],\n    operatorType: []\n  },\n  getters: {\n    isDrawerOpen: state => state.drawer,\n    getSelectedItem: state => state.selectedItem,\n    getOperateActive: state => state.operateActive,\n    getSelectedTypes: state => state.selectedTypes,\n    getGridClass: state => state.gridClass,\n    getSelectNodes: state => state.selectNodes,\n    getCurrentRangeSelected: state => state.currentRangeSelected,\n    getFilterNum: state => state.filterNum\n  },\n  mutations: {\n    SET_DRAWER(state, status) {\n      state.drawer = status;\n    },\n    SET_SELECTED_ITEM(state, item) {\n      state.selectedItem = item;\n    },\n    SET_OPERATE_ACTIVE(state, active) {\n      state.operateActive = active;\n    },\n    SET_SELECTED_TYPES(state, types) {\n      state.selectedTypes = types;\n    },\n    ADD_SELECTED_TYPE(state, type) {\n      if (!state.selectedTypes.includes(type)) {\n        state.selectedTypes.push(type);\n      }\n    },\n    REMOVE_SELECTED_TYPE(state, type) {\n      state.selectedTypes = state.selectedTypes.filter(t => t !== type);\n    },\n    CLEAR_SELECTED_TYPES(state) {\n      state.selectedTypes = [];\n    },\n    SET_GRID_CLASS(state, className) {\n      state.gridClass = className;\n    },\n    SET_SELECT_NODES(state, nodes) {\n      state.selectNodes = nodes;\n    },\n    SET_CURRENT_RANGE_SELECTED(state, range) {\n      state.currentRangeSelected = range;\n    },\n    SET_FILTER_NUM(state, num) {\n      state.filterNum = num;\n    },\n    SET_FILTER_DATA(state, { typeClass, typeItem, typeValue, operatorType, filterNum }) {\n      state.typeClass = typeClass || [];\n      state.typeItem = typeItem || [];\n      state.typeValue = typeValue || [];\n      state.operatorType = operatorType || [];\n      state.filterNum = filterNum || 0;\n    }\n  },\n  actions: {\n    toggleDrawer({ commit, state }) {\n      commit('SET_DRAWER', !state.drawer);\n    },\n    \n    openDrawer({ commit }) {\n      commit('SET_DRAWER', true);\n    },\n    \n    closeDrawer({ commit }) {\n      commit('SET_DRAWER', false);\n    },\n    \n    setSelectedItem({ commit }, item) {\n      commit('SET_SELECTED_ITEM', item);\n    },\n    \n    setOperateActive({ commit }, active) {\n      commit('SET_OPERATE_ACTIVE', active);\n    },\n    \n    updateGridClass({ commit, rootState }) {\n      const length = rootState.cellData.datasetList.length;\n      let gridClass = '';\n      \n      if (length === 2) {\n        gridClass = 'grid-2';\n      } else if (length === 3) {\n        gridClass = 'grid-3';\n      } else if (length === 4) {\n        gridClass = 'grid-4';\n      }\n      \n      commit('SET_GRID_CLASS', gridClass);\n    },\n    \n    setSelectNodes({ commit }, nodes) {\n      commit('SET_SELECT_NODES', nodes);\n    },\n    \n    setCurrentRangeSelected({ commit }, range) {\n      commit('SET_CURRENT_RANGE_SELECTED', range);\n    },\n    \n    setFilterNum({ commit }, num) {\n      commit('SET_FILTER_NUM', num);\n    },\n    \n    addSelectedType({ commit }, type) {\n      commit('ADD_SELECTED_TYPE', type);\n    },\n    \n    removeSelectedType({ commit }, type) {\n      commit('REMOVE_SELECTED_TYPE', type);\n    },\n    \n    clearSelectedTypes({ commit }) {\n      commit('CLEAR_SELECTED_TYPES');\n    }\n  }\n} ","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport cellData from './modules/cellData'\nimport uiState from './modules/uiState'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    loading: false,\n    error: null\n  },\n  getters: {\n    isLoading: state => state.loading,\n    hasError: state => !!state.error,\n    errorMessage: state => state.error\n  },\n  mutations: {\n    SET_LOADING(state, status) {\n      state.loading = status\n    },\n    SET_ERROR(state, error) {\n      state.error = error\n    },\n    CLEAR_ERROR(state) {\n      state.error = null\n    }\n  },\n  actions: {\n    setLoading({ commit }, status) {\n      commit('SET_LOADING', status)\n    },\n    setError({ commit }, error) {\n      commit('SET_ERROR', error)\n    },\n    clearError({ commit }) {\n      commit('CLEAR_ERROR')\n    }\n  },\n  modules: {\n    cellData,\n    uiState\n  }\n})\n","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store' // 直接导入store\n\nVue.use(VueRouter)\n\n// 路由懒加载\nconst HomeView = () => import(/* webpackChunkName: \"home\" */ '../views/HomeView.vue')\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'hash',\n  base: './',\n  routes,\n  // 滚动行为\n  scrollBehavior() {\n    return { x: 0, y: 0 }\n  }\n})\n\n// 全局路由守卫 - 用于页面加载进度条\nrouter.beforeEach((to, from, next) => {\n  // 直接使用导入的store对象，而不是Vue.prototype.$store\n  store.dispatch('setLoading', true);\n  next();\n});\n\nrouter.afterEach(() => {\n  // 延迟关闭加载状态，提升用户体验\n  setTimeout(() => {\n    store.dispatch('setLoading', false);\n  }, 200);\n});\n\nexport default router\n","import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.min.css'\nimport '@mdi/font/css/materialdesignicons.css'\n\nVue.use(Vuetify)\n\nconst opts = {}\n\nexport default new Vuetify(opts)","/**\r\n * 内存测试辅助工具\r\n * 用于测试Vue响应式系统内存优化效果\r\n */\r\n\r\n/**\r\n * 获取当前内存使用情况\r\n * @returns {Object} 内存使用信息\r\n */\r\nexport function getMemoryUsage() {\r\n  if (performance && performance.memory) {\r\n    return {\r\n      usedJSHeapSize: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024), // MB\r\n      totalJSHeapSize: Math.round(performance.memory.totalJSHeapSize / 1024 / 1024), // MB\r\n      jsHeapSizeLimit: Math.round(performance.memory.jsHeapSizeLimit / 1024 / 1024), // MB\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n  return {\r\n    usedJSHeapSize: 'N/A',\r\n    totalJSHeapSize: 'N/A', \r\n    jsHeapSizeLimit: 'N/A',\r\n    timestamp: Date.now()\r\n  };\r\n}\r\n\r\n/**\r\n * 记录内存使用情况\r\n * @param {string} label - 记录标签\r\n */\r\nexport function logMemoryUsage(label) {\r\n  const memory = getMemoryUsage();\r\n  console.log(`🔍 内存使用情况 [${label}]:`, {\r\n    已使用: `${memory.usedJSHeapSize} MB`,\r\n    总分配: `${memory.totalJSHeapSize} MB`,\r\n    限制: `${memory.jsHeapSizeLimit} MB`,\r\n    使用率: memory.usedJSHeapSize !== 'N/A' \r\n      ? `${Math.round((memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100)}%`\r\n      : 'N/A'\r\n  });\r\n  return memory;\r\n}\r\n\r\n/**\r\n * 内存监控器类\r\n */\r\nexport class MemoryMonitor {\r\n  constructor() {\r\n    this.records = [];\r\n    this.isMonitoring = false;\r\n    this.intervalId = null;\r\n  }\r\n\r\n  /**\r\n   * 开始监控内存使用\r\n   * @param {number} interval - 监控间隔（毫秒）\r\n   */\r\n  start(interval = 5000) {\r\n    if (this.isMonitoring) {\r\n      console.warn('内存监控已在运行中');\r\n      return;\r\n    }\r\n\r\n    this.isMonitoring = true;\r\n    console.log('🚀 开始内存监控，间隔:', interval, 'ms');\r\n    \r\n    // 立即记录一次\r\n    this.record('监控开始');\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.record('定期检查');\r\n    }, interval);\r\n  }\r\n\r\n  /**\r\n   * 停止监控\r\n   */\r\n  stop() {\r\n    if (!this.isMonitoring) {\r\n      console.warn('内存监控未运行');\r\n      return;\r\n    }\r\n\r\n    this.isMonitoring = false;\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n      this.intervalId = null;\r\n    }\r\n\r\n    console.log('🛑 内存监控已停止');\r\n    this.showSummary();\r\n  }\r\n\r\n  /**\r\n   * 记录内存使用情况\r\n   * @param {string} label - 记录标签\r\n   */\r\n  record(label) {\r\n    const memory = getMemoryUsage();\r\n    const record = {\r\n      label,\r\n      ...memory,\r\n      time: new Date().toLocaleTimeString()\r\n    };\r\n\r\n    this.records.push(record);\r\n    \r\n    // 检查内存使用是否过高\r\n    if (memory.usedJSHeapSize !== 'N/A' && memory.usedJSHeapSize > 1000) {\r\n      console.warn(`⚠️ 内存使用过高 [${label}]: ${memory.usedJSHeapSize} MB`);\r\n    }\r\n\r\n    return record;\r\n  }\r\n\r\n  /**\r\n   * 显示监控摘要\r\n   */\r\n  showSummary() {\r\n    if (this.records.length === 0) {\r\n      console.log('📊 暂无内存监控记录');\r\n      return;\r\n    }\r\n\r\n    const validRecords = this.records.filter(r => r.usedJSHeapSize !== 'N/A');\r\n    \r\n    if (validRecords.length === 0) {\r\n      console.log('📊 浏览器不支持内存监控');\r\n      return;\r\n    }\r\n\r\n    const maxMemory = Math.max(...validRecords.map(r => r.usedJSHeapSize));\r\n    const minMemory = Math.min(...validRecords.map(r => r.usedJSHeapSize));\r\n    const avgMemory = Math.round(\r\n      validRecords.reduce((sum, r) => sum + r.usedJSHeapSize, 0) / validRecords.length\r\n    );\r\n\r\n    console.log('📊 内存监控摘要:', {\r\n      总记录数: this.records.length,\r\n      有效记录数: validRecords.length,\r\n      最大内存: `${maxMemory} MB`,\r\n      最小内存: `${minMemory} MB`,\r\n      平均内存: `${avgMemory} MB`,\r\n      内存波动: `${maxMemory - minMemory} MB`\r\n    });\r\n\r\n    // 显示详细记录（最近10条）\r\n    const recentRecords = this.records.slice(-10);\r\n    console.table(recentRecords.map(r => ({\r\n      时间: r.time,\r\n      标签: r.label,\r\n      已使用: `${r.usedJSHeapSize} MB`,\r\n      总分配: `${r.totalJSHeapSize} MB`\r\n    })));\r\n  }\r\n\r\n  /**\r\n   * 获取所有记录\r\n   */\r\n  getRecords() {\r\n    return [...this.records];\r\n  }\r\n\r\n  /**\r\n   * 清空记录\r\n   */\r\n  clearRecords() {\r\n    this.records = [];\r\n    console.log('🧹 内存监控记录已清空');\r\n  }\r\n}\r\n\r\n/**\r\n * 测试Vue响应式系统内存使用\r\n * @param {Array} testData - 测试数据\r\n * @param {Object} vueInstance - Vue实例\r\n */\r\nexport function testVueReactivityMemory(testData, vueInstance) {\r\n  console.log('🧪 开始Vue响应式系统内存测试');\r\n  \r\n  const beforeMemory = logMemoryUsage('测试前');\r\n  \r\n  // 模拟将大数据添加到Vue响应式系统\r\n  if (vueInstance && vueInstance.$data) {\r\n    console.log('⚠️ 警告：即将将大数据添加到Vue响应式系统，可能导致内存溢出');\r\n    \r\n    try {\r\n      // 这里故意不执行，因为会导致OOM\r\n      // vueInstance.$data.testLargeData = testData;\r\n      console.log('✅ 跳过了危险的响应式数据设置，避免内存溢出');\r\n    } catch (error) {\r\n      console.error('❌ Vue响应式系统内存测试失败:', error);\r\n    }\r\n  }\r\n  \r\n  const afterMemory = logMemoryUsage('测试后');\r\n  \r\n  console.log('🧪 Vue响应式系统内存测试完成');\r\n  return {\r\n    before: beforeMemory,\r\n    after: afterMemory,\r\n    difference: afterMemory.usedJSHeapSize !== 'N/A' && beforeMemory.usedJSHeapSize !== 'N/A'\r\n      ? afterMemory.usedJSHeapSize - beforeMemory.usedJSHeapSize\r\n      : 'N/A'\r\n  };\r\n}\r\n\r\n/**\r\n * 测试非响应式数据存储内存使用\r\n * @param {Array} testData - 测试数据\r\n */\r\nexport function testNonReactiveMemory(testData) {\r\n  console.log('🧪 开始非响应式数据存储内存测试');\r\n  \r\n  const beforeMemory = logMemoryUsage('非响应式测试前');\r\n  \r\n  try {\r\n    // 使用Object.freeze冻结数据\r\n    const frozenData = Object.freeze([...testData]);\r\n    console.log('✅ 成功创建冻结数据，长度:', frozenData.length);\r\n    \r\n    // 模拟存储到Map中\r\n    const dataMap = new Map();\r\n    dataMap.set('testData', frozenData);\r\n    \r\n    console.log('✅ 成功存储到非响应式Map中');\r\n    \r\n    // 清理\r\n    dataMap.clear();\r\n    \r\n  } catch (error) {\r\n    console.error('❌ 非响应式数据存储测试失败:', error);\r\n  }\r\n  \r\n  const afterMemory = logMemoryUsage('非响应式测试后');\r\n  \r\n  console.log('🧪 非响应式数据存储内存测试完成');\r\n  return {\r\n    before: beforeMemory,\r\n    after: afterMemory,\r\n    difference: afterMemory.usedJSHeapSize !== 'N/A' && beforeMemory.usedJSHeapSize !== 'N/A'\r\n      ? afterMemory.usedJSHeapSize - beforeMemory.usedJSHeapSize\r\n      : 'N/A'\r\n  };\r\n}\r\n\r\n// 创建全局内存监控器实例\r\nexport const globalMemoryMonitor = new MemoryMonitor();\r\n\r\n// 在开发环境下，将工具挂载到window对象\r\nif (process.env.NODE_ENV === 'development') {\r\n  window.memoryTestHelper = {\r\n    getMemoryUsage,\r\n    logMemoryUsage,\r\n    MemoryMonitor,\r\n    testVueReactivityMemory,\r\n    testNonReactiveMemory,\r\n    globalMemoryMonitor\r\n  };\r\n  \r\n  console.log('🔧 内存测试工具已挂载到 window.memoryTestHelper');\r\n}\r\n","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport vuetify from '@/plugins/vuetify' \nimport \"./assets/css/tab.css\"\nimport _ from 'lodash'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport axios from 'axios'\nimport { setDataSource, DataSourceType, initializeDatasetConfig } from '@/api/config'\nimport { logMemoryUsage, globalMemoryMonitor } from '@/utils/memoryTestHelper'\n\n// 数据源配置 - 修改这里可以切换数据源\n// 使用 DataSourceType.LOCAL 从public文件夹获取数据\n// 使用 DataSourceType.REMOTE 从远程API获取数据\nsetDataSource(DataSourceType.LOCAL)\n\nVue.prototype.$axios = axios;\nwindow.axios = axios;\nVue.use(ElementUI);\nVue.prototype._ = _;\nwindow._ = _;\n\nVue.config.productionTip = false\n\n// 添加全局错误处理器来处理ResizeObserver循环错误\nwindow.addEventListener('error', (event) => {\n  // 检查是否是ResizeObserver循环错误\n  if (event.message && event.message.includes('ResizeObserver loop completed with undelivered notifications')) {\n    console.warn('捕获到ResizeObserver循环错误，已忽略:', event.message);\n    event.preventDefault(); // 阻止错误显示在控制台\n    return false;\n  }\n});\n\n// 处理未捕获的Promise错误\nwindow.addEventListener('unhandledrejection', (event) => {\n  if (event.reason && event.reason.message && \n      event.reason.message.includes('ResizeObserver loop')) {\n    console.warn('捕获到ResizeObserver Promise错误，已忽略:', event.reason.message);\n    event.preventDefault();\n    return false;\n  }\n});\n\n// 🔧 确保在应用启动前初始化数据集配置\nasync function initializeApp() {\n  try {\n    // 🔍 记录应用启动前的内存使用情况\n    logMemoryUsage('应用启动前');\n    \n    console.log('开始初始化数据集配置...');\n    await initializeDatasetConfig();\n    console.log('全局数据集配置初始化完成');\n    \n    // 🔍 记录配置加载后的内存使用情况\n    logMemoryUsage('配置加载后');\n    \n    // 在开发环境下启动内存监控和请求测试工具\n    if (process.env.NODE_ENV === 'development') {\n      console.log('🚀 开发环境：启动内存监控');\n      globalMemoryMonitor.start(10000); // 每10秒监控一次\n      \n      // 启用数据集切换测试工具\n      try {\n        const testModule = await import('@/utils/datasetSwitchTest');\n        console.log('🧪 数据集切换测试工具已启用');\n        window.datasetSwitchTest = testModule.default;\n      } catch (error) {\n        console.warn('数据集切换测试工具加载失败:', error);\n      }\n    }\n    \n    // 配置初始化完成后启动Vue应用\n    const app = new Vue({\n      router,\n      store,\n      vuetify,\n      render: h => h(App)\n    }).$mount('#app');\n    \n    // 🔍 记录Vue应用启动后的内存使用情况\n    logMemoryUsage('Vue应用启动后');\n    \n    // 在window上暴露Vue实例（仅开发环境）\n    if (process.env.NODE_ENV === 'development') {\n      window.vueApp = app;\n      console.log('🔧 Vue应用实例已挂载到 window.vueApp');\n    }\n    \n  } catch (error) {\n    console.error('全局数据集配置初始化失败:', error);\n    \n    // 即使配置初始化失败，也启动应用（使用回退配置）\n    console.warn('使用回退配置启动应用...');\n    new Vue({\n      router,\n      store,\n      vuetify,\n      render: h => h(App)\n    }).$mount('#app');\n  }\n}\n\n// 启动应用\ninitializeApp();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"home\" + \".\" + \"1d6778df\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + \"home\" + \".\" + \"a48f75ae\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"single_cell_vis:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"962\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksingle_cell_vis\"] = self[\"webpackChunksingle_cell_vis\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9620); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["apiCache","cache","Map","cacheRequest","key","promise","ttl","this","has","cacheEntry","get","Date","now","timestamp","set","catch","delete","invalidate","invalidateAll","clear","DataSourceType","LOCAL","REMOTE","datasetsConfig","configLoadPromise","isConfigLoading","async","loadDatasetsConfig","console","log","Promise","resolve","setTimeout","reject","Error","response","fetch","ok","status","config","json","defaultDatasets","datasets","Array","isArray","filter","dataset","enabled","defaultDataset","find","d","id","warn","length","info","error","fallbackConfig","name","displayName","description","basePath","defaultVisualization","supportedVisualizations","loadTimeout","cacheTTL","retryAttempts","autoDetectCellCount","getDatasetsConfig","getDatasetTypes","SINGLE_OUTPUTS","SINGLE_OUTPUTS1","types","forEach","enumKey","toUpperCase","DatasetType","SINGLE_OUTPUTS_QUADTREE_ORDER","SINGLE_OUTPUTS_ORIGINAL_ORDER","currentDataSource","currentDataset","isDatasetSwitching","pendingRequests","createDedupedRequest","requestFn","request","finally","getDatasetSwitchingStatus","setDatasetSwitching","switching","setDataSource","sourceType","Object","values","includes","getDataSource","isValidDatasetType","datasetType","some","getDatasetInfo","setDataset","oldDataset","then","default","window","dispatchEvent","CustomEvent","detail","getDataset","initializeDatasetConfig","hasConfig","datasetsCount","map","dynamicTypes","assign","getDatasetBasePath","fallbackDataset","datasetInfo","buildDatasetPath","relativePath","fullPath","NonReactiveDataStore","constructor","dataMap","listeners","version","setData","data","frozenData","deepFreeze","getDataSize","notifyListeners","getData","hasData","removeData","removed","clearAll","getVersion","obj","isFrozen","item","index","value","freeze","addListener","listener","Set","add","removeListener","keyListeners","size","keys","getStats","stats","totalKeys","from","sizes","nonReactiveDataStore","nonReactiveDataMixin","nonReactiveDataVersion","created","$nonReactiveData","_versionUpdateHandler","beforeDestroy","methods","getNonReactiveData","geneCount","genes","setNonReactiveData","watchNonReactiveData","callback","$once","api","axios","create","baseURL","timeout","headers","interceptors","use","cellDataApi","getFieldsInfo","requestKey","getCellTypeValues","getGeneExpression","geneName","getDatasetSummary","getCellData","params","page","limit","cachedApi","render","_vm","_c","_self","attrs","isLoading","scopedSlots","_u","fn","_b","on","clearError","_v","model","showError","$$v","expression","_s","errorMessage","staticRenderFns","computed","mapState","state","mapGetters","watch","hasError","newVal","mapActions","addEventListener","event","$store","dispatch","message","component","namespaced","typeInfo","classInfo","hoverInfo","colorField","datasetList","field","total","dataRange","geneList","datasetName","geneExpRange","dataVersion","isLoadingFieldsInfo","isLoadingCellTypeValues","getters","getCellInfoList","getFieldValue","getGeneExp","getTypeInfo","getColorField","getDatasetList","getFieldInfo","getDataRange","getDatasetName","getTotal","mutations","SET_CELL_INFO","SET_FIELD_VALUE","SET_GENE_EXP","SET_TYPE_INFO","SET_CLASS_INFO","SET_HOVER_INFO","SET_COLOR_FIELD","SET_DATASET_LIST","list","SET_FIELD","SET_TOTAL","SET_DATA_RANGE","range","SET_GENE_LIST","SET_DATASET_NAME","SET_GENE_EXP_RANGE","CLEAR_NON_REACTIVE_DATA","SET_LOADING_FIELDS_INFO","loading","SET_LOADING_CELL_TYPE_VALUES","actions","loadFieldsInfo","commit","root","fields","h5ad_filename","split","min_x","bounds","max_x","min_y","max_y","loadCellTypeValues","loadGeneList","statusText","formattedList","label","processCellInfoList","notCellType","basic","cellInfoList","children","parentNodes","treeData","nodeObj","nodeChildren","child","nChild","parent","push","cellInfo","val","loadGeneExpression","currentGeneExp","min","max","setTypeInfo","setColorField","setHoverInfo","clearHoverInfo","switchDataSource","drawer","selectedItem","operateActive","selectedTypes","gridClass","selectNodes","currentRangeSelected","filterNum","typeClass","typeItem","typeValue","operatorType","isDrawerOpen","getSelectedItem","getOperateActive","getSelectedTypes","getGridClass","getSelectNodes","getCurrentRangeSelected","getFilterNum","SET_DRAWER","SET_SELECTED_ITEM","SET_OPERATE_ACTIVE","active","SET_SELECTED_TYPES","ADD_SELECTED_TYPE","type","REMOVE_SELECTED_TYPE","t","CLEAR_SELECTED_TYPES","SET_GRID_CLASS","className","SET_SELECT_NODES","nodes","SET_CURRENT_RANGE_SELECTED","SET_FILTER_NUM","num","SET_FILTER_DATA","toggleDrawer","openDrawer","closeDrawer","setSelectedItem","setOperateActive","updateGridClass","rootState","cellData","setSelectNodes","setCurrentRangeSelected","setFilterNum","addSelectedType","removeSelectedType","clearSelectedTypes","Vue","Vuex","SET_LOADING","SET_ERROR","CLEAR_ERROR","setLoading","setError","modules","uiState","VueRouter","HomeView","routes","path","router","mode","base","scrollBehavior","x","y","beforeEach","to","next","store","afterEach","Vuetify","opts","getMemoryUsage","performance","memory","usedJSHeapSize","Math","round","totalJSHeapSize","jsHeapSizeLimit","logMemoryUsage","已使用","总分配","限制","使用率","MemoryMonitor","records","isMonitoring","intervalId","start","interval","record","setInterval","stop","clearInterval","showSummary","time","toLocaleTimeString","validRecords","r","maxMemory","minMemory","avgMemory","reduce","sum","总记录数","有效记录数","最大内存","最小内存","平均内存","内存波动","recentRecords","slice","table","时间","标签","getRecords","clearRecords","initializeApp","vuetify","h","App","$mount","prototype","$axios","ElementUI","_","productionTip","preventDefault","reason","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","n","getter","__esModule","a","definition","o","defineProperty","enumerable","f","e","chunkId","all","promises","u","miniCssF","g","globalThis","Function","prop","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","p","createStylesheet","fullhref","oldTag","linkTag","rel","nonce","onLinkComplete","errorType","realHref","href","err","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}