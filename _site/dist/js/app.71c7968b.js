(function(){"use strict";var e={472:function(e,t,a){a.r(t);const o={cache:new Map,cacheRequest(e,t,a=6e4){if(this.cache.has(e)){const a=this.cache.get(e);return Date.now()-a.timestamp>a.ttl&&(a.promise=t,a.timestamp=Date.now()),a.promise}{const o={promise:t,timestamp:Date.now(),ttl:a};this.cache.set(e,o),t.catch((()=>{this.cache.delete(e)}))}return t},invalidate(e){this.cache.delete(e)},invalidateAll(){this.cache.clear()}};t["default"]=o},2004:function(e,t,a){a.d(t,{CV:function(){return r},GU:function(){return i},JC:function(){return m},U4:function(){return E},buildDatasetPath:function(){return L},jO:function(){return v},mL:function(){return g},ol:function(){return o},vX:function(){return S},vh:function(){return T}});const o={LOCAL:"local",REMOTE:"remote"};let s=null,n=null;async function r(){return n||(s?Promise.resolve(s):(n=(async()=>{try{const e=await fetch("/Data/datasets_config.json");if(!e.ok)throw new Error(`Failed to load datasets config: ${e.status}`);const t=await e.json();if(console.log("config",t,defaultDatasets,"399999999999999"),!t.datasets||!Array.isArray(t.datasets))throw new Error("Invalid datasets config format: missing datasets array");return t.datasets=t.datasets.filter((e=>!1!==e.enabled)),defaultDatasets?t.defaultDataset=defaultDatasets:t.defaultDataset&&!t.datasets.find((e=>e.id===t.defaultDataset))?(console.warn(`配置的默认数据集 '${t.defaultDataset}' 在启用的数据集中不存在`),t.defaultDataset=t.datasets.length>0?t.datasets[0].id:null,t.defaultDataset&&console.info(`已自动设置默认数据集为: ${t.defaultDataset}`)):!t.defaultDataset&&t.datasets.length>0&&(t.defaultDataset=t.datasets[0].id,console.info(`配置文件中未指定defaultDataset，自动设置为第一个数据集: ${t.defaultDataset}`)),s=t,console.log("数据集配置加载成功:",t),t}catch(e){console.error("加载数据集配置失败:",e);const t={datasets:[{id:"Tumour",name:"Tumour",displayName:"Tumour scRNAseq",description:"Main single cell RNA-seq dataset",basePath:"/Tumour",enabled:!0,defaultVisualization:"umap",supportedVisualizations:["tsne","umap","pca"]},{id:"mouse",name:"mouse",displayName:"Mouse scRNAseq",description:"Alternative single cell RNA-seq dataset",basePath:"/mouse",enabled:!0,defaultVisualization:"umap",supportedVisualizations:["tsne","umap","pca"]}],defaultDataset:"Tumour",config:{loadTimeout:3e4,cacheTTL:3e5,retryAttempts:3,autoDetectCellCount:!0}};return console.warn("使用回退配置，默认数据集设置为:",t.defaultDataset),s=t,t}finally{n=null}})(),n))}function i(){return s}function l(){if(!s)return{SINGLE_OUTPUTS:"single_outputs",SINGLE_OUTPUTS1:"single_outputs1"};const e={};return s.datasets.forEach((t=>{const a=t.id.toUpperCase();e[a]=t.id})),e}let c={SINGLE_OUTPUTS:"single_outputs",SINGLE_OUTPUTS1:"single_outputs1",SINGLE_OUTPUTS_QUADTREE_ORDER:"single_outputs_quadtree_order",SINGLE_OUTPUTS_ORIGINAL_ORDER:"single_outputs_original_order"},u=o.LOCAL,d=null,f=!1;function m(){return f}function p(e){f=e,console.log("数据集切换状态: "+(e?"进行中":"完成"))}function g(e){Object.values(o).includes(e)?(u=e,console.log(`数据源已切换为: ${e}`)):console.error("无效的数据源类型")}function E(){return u}function h(e){return s&&s.datasets?s.datasets.some((t=>t.id===e)):Object.values(c).includes(e)}function _(e){return s&&s.datasets&&s.datasets.find((t=>t.id===e))||null}function S(e){if(h(e)){const t=d;d=e,console.log(`数据集已切换为: ${e}`),t!==e&&(console.log("数据集切换，清除相关缓存..."),p(!0),Promise.resolve().then(a.bind(a,472)).then((({default:e})=>{e.invalidate("fields_info"),e.invalidate("cell_type_values"),e.invalidate("gene_list"),console.log("缓存清除完成"),setTimeout((()=>{p(!1)}),2e3)})).catch((e=>{console.warn("清除缓存时出错:",e),p(!1)}))),"undefined"!==typeof window&&window.dispatchEvent(new CustomEvent("datasetChanged",{detail:{dataset:e,oldDataset:t}}))}else console.error("无效的数据集类型:",e)}function T(){return console.log("currentDataset",d),!d&&s&&(d=s.defaultDataset,!d&&s.datasets&&s.datasets.length>0&&(d=s.datasets[0].id)),d}async function v(){try{console.log("开始加载数据集配置...");const e=await r();console.log("配置加载结果:",{hasConfig:!!e,defaultDataset:e?.defaultDataset,datasetsCount:e?.datasets?.length||0,datasets:e?.datasets?.map((e=>e.id))||[]});const t=l();Object.assign(c,t),d||(d=e.defaultDataset,console.log("从配置设置默认数据集:",d),!d&&e.datasets&&e.datasets.length>0&&(d=e.datasets[0].id,console.warn("配置文件中未指定defaultDataset，使用第一个数据集:",d))),console.log("数据集配置初始化完成，当前数据集:",d),d||(console.error("警告：currentDataset仍为null，强制设置为Tumour"),d="Tumour")}catch(e){console.error("数据集配置初始化失败:",e),console.log("datasetsConfig状态:",{hasConfig:!!s,defaultDataset:s?.defaultDataset,datasetsCount:s?.datasets?.length||0}),s&&s.defaultDataset?(d=s.defaultDataset,console.log("从回退配置设置默认数据集:",d)):s&&s.datasets&&s.datasets.length>0?(d=s.datasets[0].id,console.log("从回退配置第一个数据集设置:",d)):(console.error("无法确定默认数据集：没有可用的配置信息，强制设置为Tumour"),d="Tumour")}}function y(e=null){const t=e||T();if(console.log("getDatasetBasePath - dataset:",t),!t&&s){const e=s.defaultDataset||(s.datasets?.length>0?s.datasets[0].id:null);if(e)return console.warn("使用回退数据集:",e),y(e)}if(!t)return console.error("无法获取数据集，使用默认回退路径: /Tumour"),"/Tumour";const a=_(t);return a&&a.basePath?a.basePath:`/${t}`}function L(e,t=null){if(!e)return console.error("相对路径不能为空"),"/Tumour/unknown";const a=y(t),o=`${a}/${e}`;return console.log(`buildDatasetPath: ${e} -> ${o}`),o}},2548:function(e,t,a){a.d(t,{o:function(){return n}});class o{constructor(){this.dataMap=new Map,this.listeners=new Map,this.version=0,console.log("🚀 NonReactiveDataStore initialized - 大数据将存储在Vue响应式系统之外")}setData(e,t){const a=this.deepFreeze(t);this.dataMap.set(e,a),this.version++,console.log(`📦 NonReactiveDataStore.setData: ${e}, size: ${this.getDataSize(t)}, version: ${this.version}`),this.notifyListeners(e,a)}getData(e){return this.dataMap.get(e)}hasData(e){return this.dataMap.has(e)}removeData(e){const t=this.dataMap.delete(e);t&&(this.version++,this.notifyListeners(e,null),console.log(`🗑️ NonReactiveDataStore.removeData: ${e}, version: ${this.version}`))}clearAll(){this.dataMap.clear(),this.version++,console.log(`🧹 NonReactiveDataStore.clearAll, version: ${this.version}`)}getVersion(){return this.version}deepFreeze(e){return null===e||"object"!==typeof e||Object.isFrozen(e)?e:(Array.isArray(e)?e.forEach(((t,a)=>{e[a]=this.deepFreeze(t)})):Object.values(e).forEach((e=>{this.deepFreeze(e)})),Object.freeze(e))}addListener(e,t){this.listeners.has(e)||this.listeners.set(e,new Set),this.listeners.get(e).add(t)}removeListener(e,t){const a=this.listeners.get(e);a&&(a.delete(t),0===a.size&&this.listeners.delete(e))}notifyListeners(e,t){const a=this.listeners.get(e);a&&a.forEach((a=>{try{a(t,e)}catch(o){console.error(`监听器执行错误 [${e}]:`,o)}}))}getDataSize(e){return Array.isArray(e)?`Array[${e.length}]`:e&&"object"===typeof e?`Object{${Object.keys(e).length} keys}`:typeof e}getStats(){const e={totalKeys:this.dataMap.size,version:this.version,keys:Array.from(this.dataMap.keys()),sizes:{}};return this.dataMap.forEach(((t,a)=>{e.sizes[a]=this.getDataSize(t)})),e}}const s=new o;t.A=s;const n={data(){return{nonReactiveDataVersion:s.getVersion()}},created(){this.$nonReactiveData=s,this._versionUpdateHandler=()=>{this.nonReactiveDataVersion=s.getVersion()},s.addListener("__version__",this._versionUpdateHandler)},beforeDestroy(){this._versionUpdateHandler&&s.removeListener("__version__",this._versionUpdateHandler)},methods:{watchNonReactiveData(e,t){s.addListener(e,t),this.$once("hook:beforeDestroy",(()=>{s.removeListener(e,t)}))}}}},8661:function(e,t,a){a.d(t,{lu:function(){return l}});var o=a(4373);const s=o.A.create({baseURL:"/",timeout:3e4,headers:{"Content-Type":"application/json"}});s.interceptors.request.use((e=>e),(e=>(console.error("请求错误:",e),Promise.reject(e)))),s.interceptors.response.use((e=>e.data),(e=>{if(console.error("响应错误:",e),e.response)switch(e.response.status){case 404:console.error("请求的资源不存在");break;case 500:console.error("服务器内部错误");break;default:console.error(`请求失败: ${e.response.status}`)}else e.request?console.error("没有收到响应"):console.error("请求配置错误");return Promise.reject(e)}));var n=a(2004);const r={getFieldsInfo:()=>(0,n.U4)()===n.ol.LOCAL?s.get((0,n.buildDatasetPath)("fields_info.json")):s.get("/api/single-cell/fields-info"),getCellTypeValues:()=>(0,n.U4)()===n.ol.LOCAL?s.get((0,n.buildDatasetPath)("cell_type_values.json")):s.get("/api/single-cell/cell-type-values"),getGeneExpression:e=>(0,n.U4)()===n.ol.LOCAL?s.get(`/gene_expressions/${e}.json`):s.get(`/api/single-cell/gene-expression/${e}`),getDatasetSummary:()=>(0,n.U4)()===n.ol.LOCAL?s.get("/multiple_outputs/dataset_summary.json"):s.get("/api/single-cell/dataset-summary"),getCellData:(e={page:1,limit:5e3})=>(0,n.U4)()===n.ol.LOCAL?s.get("/cell_data.json",{params:e}):s.get("/api/single-cell/cell-data",{params:e})};var i=a(472);const l={getFieldsInfo:()=>{const e="fields_info";return i["default"].cacheRequest(e,r.getFieldsInfo())},getCellTypeValues:()=>{const e="cell_type_values";return i["default"].cacheRequest(e,r.getCellTypeValues())},getGeneExpression:e=>{const t=`gene_exp_${e}`;return i["default"].cacheRequest(t,r.getGeneExpression(e))},getDatasetSummary:()=>{const e="dataset_summary";return i["default"].cacheRequest(e,r.getDatasetSummary())},getCellData:e=>{const t=`cell_data_page_${e.page}_limit_${e.limit}`;return i["default"].cacheRequest(t,r.getCellData(e))}}},9620:function(e,t,a){var o=a(6848),s=function(){var e=this,t=e._self._c;return t("v-app",[t("v-overlay",{attrs:{value:e.isLoading,absolute:""}},[t("v-progress-circular",{attrs:{indeterminate:"",size:"64"}})],1),t("v-snackbar",{attrs:{timeout:5e3,color:"error",top:""},scopedSlots:e._u([{key:"action",fn:function({attrs:a}){return[t("v-btn",e._b({attrs:{text:""},on:{click:e.clearError}},"v-btn",a,!1),[e._v(" 关闭 ")])]}}]),model:{value:e.showError,callback:function(t){e.showError=t},expression:"showError"}},[e._v(" "+e._s(e.errorMessage)+" ")]),t("v-main",[t("router-view")],1)],1)},n=[],r=a(3518),i={data:()=>({showError:!1}),computed:{...(0,r.aH)({errorMessage:e=>e.error}),...(0,r.L8)(["isLoading","hasError"])},watch:{hasError(e){this.showError=e}},methods:{...(0,r.i0)(["clearError"])},created(){window.addEventListener("error",(e=>{this.$store.dispatch("setError",`系统错误: ${e.message}`)}))}},l=i,c=a(1656),u=(0,c.A)(l,s,n,!1,null,null,null),d=u.exports,f=a(6178),m=a(8661),p=a(2004),g=a(2548);"undefined"!==typeof window&&window.addEventListener("datasetChanged",(e=>{console.log("Store: 检测到数据集切换事件:",e.detail.dataset)}));var E={namespaced:!0,state:{typeInfo:{},classInfo:{},hoverInfo:{},colorField:"",datasetList:["single"],field:[],total:0,dataRange:{},geneList:[],datasetName:"",geneExpRange:{},dataVersion:0},getters:{getCellInfoList:e=>(e.dataVersion,g.A.getData("cellInfoList")||[]),getFieldValue:e=>(e.dataVersion,g.A.getData("fieldValue")||{}),getGeneExp:e=>(e.dataVersion,g.A.getData("geneExp")||{}),getTypeInfo:e=>e.typeInfo,getColorField:e=>e.colorField,getDatasetList:e=>e.datasetList,getFieldInfo:e=>e.field,getDataRange:e=>e.dataRange,getDatasetName:e=>e.datasetName,getTotal:e=>e.total},mutations:{SET_CELL_INFO(e,t){console.log("🔄 SET_CELL_INFO: 存储到nonReactiveDataStore，数据大小:",Array.isArray(t)?t.length:"N/A"),g.A.setData("cellInfoList",t),e.dataVersion++},SET_FIELD_VALUE(e,t){console.log("🔄 SET_FIELD_VALUE: 存储到nonReactiveDataStore，字段数量:",Object.keys(t||{}).length),g.A.setData("fieldValue",t),e.dataVersion++},SET_GENE_EXP(e,t){console.log("🔄 SET_GENE_EXP: 存储到nonReactiveDataStore，基因数量:",Object.keys(t||{}).length),g.A.setData("geneExp",t),e.dataVersion++},SET_TYPE_INFO(e,t){e.typeInfo=t},SET_CLASS_INFO(e,t){e.classInfo=t},SET_HOVER_INFO(e,t){e.hoverInfo=t},SET_COLOR_FIELD(e,t){e.colorField=t},SET_DATASET_LIST(e,t){e.datasetList=t},SET_FIELD(e,t){e.field=t},SET_TOTAL(e,t){e.total=t},SET_DATA_RANGE(e,t){e.dataRange=t},SET_GENE_LIST(e,t){e.geneList=t},SET_DATASET_NAME(e,t){e.datasetName=t},SET_GENE_EXP_RANGE(e,t){e.geneExpRange=t},CLEAR_NON_REACTIVE_DATA(e){console.log("🧹 清理nonReactiveDataStore中的大数据"),g.A.clearAll(),e.dataVersion++}},actions:{async loadFieldsInfo({commit:e,dispatch:t}){try{t("setLoading",!0,{root:!0});const a=await m.lu.getFieldsInfo();e("SET_FIELD",a.fields),e("SET_TOTAL",a.total),e("SET_DATASET_NAME",a.h5ad_filename.split(".")[0]),e("SET_DATA_RANGE",{min_x:a.bounds[0],max_x:a.bounds[2],min_y:a.bounds[1],max_y:a.bounds[3]}),a.fields.length>0&&e("SET_COLOR_FIELD",a.fields[0]),t("setLoading",!1,{root:!0})}catch(a){console.error("加载字段信息失败:",a),(0,p.JC)()?console.log("数据集切换期间的错误已被抑制:",a.message):t("setError","加载数据失败，请检查网络连接后重试",{root:!0}),t("setLoading",!1,{root:!0})}},async loadCellTypeValues({commit:e,dispatch:t,state:a}){try{t("setLoading",!0,{root:!0});const o=await m.lu.getCellTypeValues();e("SET_FIELD_VALUE",o),await t("processCellInfoList",{fields:a.field,values:o}),t("setLoading",!1,{root:!0})}catch(o){console.error("加载细胞类型值失败:",o),(0,p.JC)()?console.log("数据集切换期间的错误已被抑制:",o.message):t("setError","加载细胞类型数据失败，请检查网络连接后重试",{root:!0}),t("setLoading",!1,{root:!0})}},async loadGeneList({commit:e,dispatch:t}){try{t("setLoading",!0,{root:!0});const{buildDatasetPath:o}=await Promise.resolve().then(a.bind(a,2004)),s=await fetch(o("gene_list.json"));if(!s.ok)throw new Error(`加载基因列表失败: ${s.status} ${s.statusText}`);const n=await s.json(),r=n.map((e=>({label:e,value:e})));return e("SET_GENE_LIST",r),t("setLoading",!1,{root:!0}),r}catch(o){return console.error("加载基因列表失败:",o),(0,p.JC)()?console.log("数据集切换期间的错误已被抑制:",o.message):t("setError","加载基因列表失败，请检查网络连接后重试",{root:!0}),t("setLoading",!1,{root:!0}),[]}},processCellInfoList({commit:e,state:t},{fields:a,values:o}){const s=["x","y","Siletti_modf_SCANVI_L1","Siletti_modf_SCANVI_L2","region","subregion"],n=a.filter((e=>!s.includes(e)));let r=[];if(a.includes("Siletti_modf_SCANVI_L1")&&a.includes("Siletti_modf_SCANVI_L2")){const e={name:"Class",children:[]},t=o["Siletti_modf_SCANVI_L1"],a=t.map((e=>{const t={id:e,name:e,children:[]},a=o["Siletti_modf_SCANVI_L2"],s=a.filter((t=>t.includes(e+"-"))).map((e=>({id:e,name:e,parent:t.id})));return t.children=s,t}));e.children=a,r.push(e)}console.log(a,o,86);for(const i of n)if("Class"!==i){const e={name:i,children:[]};o[i]&&Array.isArray(o[i])&&(e.children=o[i].map((e=>({id:e,name:e})))),r.push(e)}e("SET_CELL_INFO",r)},async loadGeneExpression({commit:e,dispatch:t,state:a},o){try{t("setLoading",!0,{root:!0});const s=await m.lu.getGeneExpression(o),n=g.A.getData("geneExp")||{};return e("SET_GENE_EXP",{...n,[o]:s.values}),e("SET_GENE_EXP_RANGE",{...a.geneExpRange,[o]:{min:s.min,max:s.max}}),t("setLoading",!1,{root:!0}),s}catch(s){return console.error(`加载基因${o}表达数据失败:`,s),t("setError",`加载基因${o}表达数据失败`,{root:!0}),t("setLoading",!1,{root:!0}),null}},setTypeInfo({commit:e},t){e("SET_TYPE_INFO",t)},setColorField({commit:e},t){e("SET_COLOR_FIELD",t)},setHoverInfo({commit:e},t){e("SET_HOVER_INFO",t)},clearHoverInfo({commit:e}){e("SET_HOVER_INFO",{})},switchDataSource({dispatch:e,commit:t},a){(0,p.mL)(a),t("CLEAR_NON_REACTIVE_DATA"),e("loadFieldsInfo"),t("SET_GENE_EXP",{}),t("SET_GENE_EXP_RANGE",{})}}},h={namespaced:!0,state:{drawer:!1,selectedItem:null,operateActive:1,selectedTypes:[],gridClass:"",selectNodes:[],currentRangeSelected:[],filterNum:0,typeClass:[],typeItem:[],typeValue:[],operatorType:[]},getters:{isDrawerOpen:e=>e.drawer,getSelectedItem:e=>e.selectedItem,getOperateActive:e=>e.operateActive,getSelectedTypes:e=>e.selectedTypes,getGridClass:e=>e.gridClass,getSelectNodes:e=>e.selectNodes,getCurrentRangeSelected:e=>e.currentRangeSelected,getFilterNum:e=>e.filterNum},mutations:{SET_DRAWER(e,t){e.drawer=t},SET_SELECTED_ITEM(e,t){e.selectedItem=t},SET_OPERATE_ACTIVE(e,t){e.operateActive=t},SET_SELECTED_TYPES(e,t){e.selectedTypes=t},ADD_SELECTED_TYPE(e,t){e.selectedTypes.includes(t)||e.selectedTypes.push(t)},REMOVE_SELECTED_TYPE(e,t){e.selectedTypes=e.selectedTypes.filter((e=>e!==t))},CLEAR_SELECTED_TYPES(e){e.selectedTypes=[]},SET_GRID_CLASS(e,t){e.gridClass=t},SET_SELECT_NODES(e,t){e.selectNodes=t},SET_CURRENT_RANGE_SELECTED(e,t){e.currentRangeSelected=t},SET_FILTER_NUM(e,t){e.filterNum=t},SET_FILTER_DATA(e,{typeClass:t,typeItem:a,typeValue:o,operatorType:s,filterNum:n}){e.typeClass=t||[],e.typeItem=a||[],e.typeValue=o||[],e.operatorType=s||[],e.filterNum=n||0}},actions:{toggleDrawer({commit:e,state:t}){e("SET_DRAWER",!t.drawer)},openDrawer({commit:e}){e("SET_DRAWER",!0)},closeDrawer({commit:e}){e("SET_DRAWER",!1)},setSelectedItem({commit:e},t){e("SET_SELECTED_ITEM",t)},setOperateActive({commit:e},t){e("SET_OPERATE_ACTIVE",t)},updateGridClass({commit:e,rootState:t}){const a=t.cellData.datasetList.length;let o="";2===a?o="grid-2":3===a?o="grid-3":4===a&&(o="grid-4"),e("SET_GRID_CLASS",o)},setSelectNodes({commit:e},t){e("SET_SELECT_NODES",t)},setCurrentRangeSelected({commit:e},t){e("SET_CURRENT_RANGE_SELECTED",t)},setFilterNum({commit:e},t){e("SET_FILTER_NUM",t)},addSelectedType({commit:e},t){e("ADD_SELECTED_TYPE",t)},removeSelectedType({commit:e},t){e("REMOVE_SELECTED_TYPE",t)},clearSelectedTypes({commit:e}){e("CLEAR_SELECTED_TYPES")}}};o["default"].use(r.Ay);var _=new r.Ay.Store({state:{loading:!1,error:null},getters:{isLoading:e=>e.loading,hasError:e=>!!e.error,errorMessage:e=>e.error},mutations:{SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{setLoading({commit:e},t){e("SET_LOADING",t)},setError({commit:e},t){e("SET_ERROR",t)},clearError({commit:e}){e("CLEAR_ERROR")}},modules:{cellData:E,uiState:h}});o["default"].use(f.Ay);const S=()=>a.e(962).then(a.bind(a,9514)),T=[{path:"/",name:"home",component:S}],v=new f.Ay({mode:"hash",base:"./",routes:T,scrollBehavior(){return{x:0,y:0}}});v.beforeEach(((e,t,a)=>{_.dispatch("setLoading",!0),a()})),v.afterEach((()=>{setTimeout((()=>{_.dispatch("setLoading",!1)}),200)}));var y=v,L=a(3691),D=a.n(L);a(4301);o["default"].use(D());const A={};var C=new(D())(A),R=a(8626),w=a.n(R),N=a(9143),b=a.n(N),I=a(4373);function O(){return performance&&performance.memory?{usedJSHeapSize:Math.round(performance.memory.usedJSHeapSize/1024/1024),totalJSHeapSize:Math.round(performance.memory.totalJSHeapSize/1024/1024),jsHeapSizeLimit:Math.round(performance.memory.jsHeapSizeLimit/1024/1024),timestamp:Date.now()}:{usedJSHeapSize:"N/A",totalJSHeapSize:"N/A",jsHeapSizeLimit:"N/A",timestamp:Date.now()}}function M(e){const t=O();return console.log(`🔍 内存使用情况 [${e}]:`,{"已使用":`${t.usedJSHeapSize} MB`,"总分配":`${t.totalJSHeapSize} MB`,"限制":`${t.jsHeapSizeLimit} MB`,"使用率":"N/A"!==t.usedJSHeapSize?`${Math.round(t.usedJSHeapSize/t.jsHeapSizeLimit*100)}%`:"N/A"}),t}class V{constructor(){this.records=[],this.isMonitoring=!1,this.intervalId=null}start(e=5e3){this.isMonitoring?console.warn("内存监控已在运行中"):(this.isMonitoring=!0,console.log("🚀 开始内存监控，间隔:",e,"ms"),this.record("监控开始"),this.intervalId=setInterval((()=>{this.record("定期检查")}),e))}stop(){this.isMonitoring?(this.isMonitoring=!1,this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null),console.log("🛑 内存监控已停止"),this.showSummary()):console.warn("内存监控未运行")}record(e){const t=O(),a={label:e,...t,time:(new Date).toLocaleTimeString()};return this.records.push(a),"N/A"!==t.usedJSHeapSize&&t.usedJSHeapSize>1e3&&console.warn(`⚠️ 内存使用过高 [${e}]: ${t.usedJSHeapSize} MB`),a}showSummary(){if(0===this.records.length)return void console.log("📊 暂无内存监控记录");const e=this.records.filter((e=>"N/A"!==e.usedJSHeapSize));if(0===e.length)return void console.log("📊 浏览器不支持内存监控");const t=Math.max(...e.map((e=>e.usedJSHeapSize))),a=Math.min(...e.map((e=>e.usedJSHeapSize))),o=Math.round(e.reduce(((e,t)=>e+t.usedJSHeapSize),0)/e.length);console.log("📊 内存监控摘要:",{"总记录数":this.records.length,"有效记录数":e.length,"最大内存":`${t} MB`,"最小内存":`${a} MB`,"平均内存":`${o} MB`,"内存波动":t-a+" MB"});const s=this.records.slice(-10);console.table(s.map((e=>({"时间":e.time,"标签":e.label,"已使用":`${e.usedJSHeapSize} MB`,"总分配":`${e.totalJSHeapSize} MB`}))))}getRecords(){return[...this.records]}clearRecords(){this.records=[],console.log("🧹 内存监控记录已清空")}}new V;async function $(){try{M("应用启动前"),console.log("开始初始化数据集配置..."),await(0,p.jO)(),console.log("全局数据集配置初始化完成"),M("配置加载后");new o["default"]({router:y,store:_,vuetify:C,render:e=>e(d)}).$mount("#app");M("Vue应用启动后")}catch(e){console.error("全局数据集配置初始化失败:",e),console.warn("使用回退配置启动应用..."),new o["default"]({router:y,store:_,vuetify:C,render:e=>e(d)}).$mount("#app")}}(0,p.mL)(p.ol.LOCAL),o["default"].prototype.$axios=I.A,window.axios=I.A,o["default"].use(b()),o["default"].prototype._=w(),window._=w(),o["default"].config.productionTip=!1,window.addEventListener("error",(e=>{if(e.message&&e.message.includes("ResizeObserver loop completed with undelivered notifications"))return console.warn("捕获到ResizeObserver循环错误，已忽略:",e.message),e.preventDefault(),!1})),window.addEventListener("unhandledrejection",(e=>{if(e.reason&&e.reason.message&&e.reason.message.includes("ResizeObserver loop"))return console.warn("捕获到ResizeObserver Promise错误，已忽略:",e.reason.message),e.preventDefault(),!1})),$()}},t={};function a(o){var s=t[o];if(void 0!==s)return s.exports;var n=t[o]={id:o,loaded:!1,exports:{}};return e[o].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}a.m=e,function(){a.amdO={}}(),function(){var e=[];a.O=function(t,o,s,n){if(!o){var r=1/0;for(u=0;u<e.length;u++){o=e[u][0],s=e[u][1],n=e[u][2];for(var i=!0,l=0;l<o.length;l++)(!1&n||r>=n)&&Object.keys(a.O).every((function(e){return a.O[e](o[l])}))?o.splice(l--,1):(i=!1,n<r&&(r=n));if(i){e.splice(u--,1);var c=s();void 0!==c&&(t=c)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[o,s,n]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,o){return a.f[o](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/home.1a20654b.js"}}(),function(){a.miniCssF=function(e){return"css/home.1de34bfe.css"}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="single_cell_vis:";a.l=function(o,s,n,r){if(e[o])e[o].push(s);else{var i,l;if(void 0!==n)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==o||d.getAttribute("data-webpack")==t+n){i=d;break}}i||(l=!0,i=document.createElement("script"),i.charset="utf-8",i.timeout=120,a.nc&&i.setAttribute("nonce",a.nc),i.setAttribute("data-webpack",t+n),i.src=o),e[o]=[s];var f=function(t,a){i.onerror=i.onload=null,clearTimeout(m);var s=e[o];if(delete e[o],i.parentNode&&i.parentNode.removeChild(i),s&&s.forEach((function(e){return e(a)})),t)return t(a)},m=setTimeout(f.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=f.bind(null,i.onerror),i.onload=f.bind(null,i.onload),l&&document.head.appendChild(i)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){a.p=""}(),function(){if("undefined"!==typeof document){var e=function(e,t,o,s,n){var r=document.createElement("link");r.rel="stylesheet",r.type="text/css",a.nc&&(r.nonce=a.nc);var i=function(a){if(r.onerror=r.onload=null,"load"===a.type)s();else{var o=a&&a.type,i=a&&a.target&&a.target.href||t,l=new Error("Loading CSS chunk "+e+" failed.\n("+o+": "+i+")");l.name="ChunkLoadError",l.code="CSS_CHUNK_LOAD_FAILED",l.type=o,l.request=i,r.parentNode&&r.parentNode.removeChild(r),n(l)}};return r.onerror=r.onload=i,r.href=t,o?o.parentNode.insertBefore(r,o.nextSibling):document.head.appendChild(r),r},t=function(e,t){for(var a=document.getElementsByTagName("link"),o=0;o<a.length;o++){var s=a[o],n=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(n===e||n===t))return s}var r=document.getElementsByTagName("style");for(o=0;o<r.length;o++){s=r[o],n=s.getAttribute("data-href");if(n===e||n===t)return s}},o=function(o){return new Promise((function(s,n){var r=a.miniCssF(o),i=a.p+r;if(t(r,i))return s();e(o,i,null,s,n)}))},s={524:0};a.f.miniCss=function(e,t){var a={962:1};s[e]?t.push(s[e]):0!==s[e]&&a[e]&&t.push(s[e]=o(e).then((function(){s[e]=0}),(function(t){throw delete s[e],t})))}}}(),function(){var e={524:0};a.f.j=function(t,o){var s=a.o(e,t)?e[t]:void 0;if(0!==s)if(s)o.push(s[2]);else{var n=new Promise((function(a,o){s=e[t]=[a,o]}));o.push(s[2]=n);var r=a.p+a.u(t),i=new Error,l=function(o){if(a.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var n=o&&("load"===o.type?"missing":o.type),r=o&&o.target&&o.target.src;i.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",i.name="ChunkLoadError",i.type=n,i.request=r,s[1](i)}};a.l(r,l,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,o){var s,n,r=o[0],i=o[1],l=o[2],c=0;if(r.some((function(t){return 0!==e[t]}))){for(s in i)a.o(i,s)&&(a.m[s]=i[s]);if(l)var u=l(a)}for(t&&t(o);c<r.length;c++)n=r[c],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(u)},o=self["webpackChunksingle_cell_vis"]=self["webpackChunksingle_cell_vis"]||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var o=a.O(void 0,[504],(function(){return a(9620)}));o=a.O(o)})();
//# sourceMappingURL=app.71c7968b.js.map